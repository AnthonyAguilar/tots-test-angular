import { Component } from '@angular/core';
import { TotsBaseFieldComponent } from '../tots-base-field.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/material/button-toggle";
export class ButtonToggleFieldComponent extends TotsBaseFieldComponent {
    onChange(event) {
        this.input.setValue(event.value);
    }
}
ButtonToggleFieldComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: ButtonToggleFieldComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ButtonToggleFieldComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.3", type: ButtonToggleFieldComponent, selector: "tots-button-toggle-field", usesInheritance: true, ngImport: i0, template: "<p *ngIf=\"field.label\"> {{ field.label }} </p>\r\n<mat-button-toggle-group [formControl]=\"input\">\r\n    <mat-button-toggle *ngFor=\"let option of field.extra.options\" [value]=\"option.id\">{{ option.title }}</mat-button-toggle>\r\n</mat-button-toggle-group>\r\n\r\n", styles: [""], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "directive", type: i3.MatButtonToggleGroup, selector: "mat-button-toggle-group", inputs: ["appearance", "name", "vertical", "value", "multiple", "disabled"], outputs: ["valueChange", "change"], exportAs: ["matButtonToggleGroup"] }, { kind: "component", type: i3.MatButtonToggle, selector: "mat-button-toggle", inputs: ["disableRipple", "aria-label", "aria-labelledby", "id", "name", "value", "tabIndex", "appearance", "checked", "disabled"], outputs: ["change"], exportAs: ["matButtonToggle"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: ButtonToggleFieldComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tots-button-toggle-field', template: "<p *ngIf=\"field.label\"> {{ field.label }} </p>\r\n<mat-button-toggle-group [formControl]=\"input\">\r\n    <mat-button-toggle *ngFor=\"let option of field.extra.options\" [value]=\"option.id\">{{ option.title }}</mat-button-toggle>\r\n</mat-button-toggle-group>\r\n\r\n" }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnV0dG9uLXRvZ2dsZS1maWVsZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy90b3RzL2Zvcm0vc3JjL2xpYi9maWVsZHMvYnV0dG9uLXRvZ2dsZS1maWVsZC9idXR0b24tdG9nZ2xlLWZpZWxkLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3RvdHMvZm9ybS9zcmMvbGliL2ZpZWxkcy9idXR0b24tdG9nZ2xlLWZpZWxkL2J1dHRvbi10b2dnbGUtZmllbGQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7Ozs7QUFPdEUsTUFBTSxPQUFPLDBCQUEyQixTQUFRLHNCQUFzQjtJQUVwRSxRQUFRLENBQUMsS0FBNEI7UUFDbkMsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ25DLENBQUM7O3VIQUpVLDBCQUEwQjsyR0FBMUIsMEJBQTBCLHVGQ1R2QyxpUkFLQTsyRkRJYSwwQkFBMEI7a0JBTHRDLFNBQVM7K0JBQ0UsMEJBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1hdEJ1dHRvblRvZ2dsZUNoYW5nZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2J1dHRvbi10b2dnbGUnO1xyXG5pbXBvcnQgeyBUb3RzQmFzZUZpZWxkQ29tcG9uZW50IH0gZnJvbSAnLi4vdG90cy1iYXNlLWZpZWxkLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3RvdHMtYnV0dG9uLXRvZ2dsZS1maWVsZCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2J1dHRvbi10b2dnbGUtZmllbGQuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2J1dHRvbi10b2dnbGUtZmllbGQuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBCdXR0b25Ub2dnbGVGaWVsZENvbXBvbmVudCBleHRlbmRzIFRvdHNCYXNlRmllbGRDb21wb25lbnQge1xyXG5cclxuICBvbkNoYW5nZShldmVudDogTWF0QnV0dG9uVG9nZ2xlQ2hhbmdlKSB7XHJcbiAgICB0aGlzLmlucHV0LnNldFZhbHVlKGV2ZW50LnZhbHVlKTtcclxuICB9XHJcbn1cclxuIiwiPHAgKm5nSWY9XCJmaWVsZC5sYWJlbFwiPiB7eyBmaWVsZC5sYWJlbCB9fSA8L3A+XHJcbjxtYXQtYnV0dG9uLXRvZ2dsZS1ncm91cCBbZm9ybUNvbnRyb2xdPVwiaW5wdXRcIj5cclxuICAgIDxtYXQtYnV0dG9uLXRvZ2dsZSAqbmdGb3I9XCJsZXQgb3B0aW9uIG9mIGZpZWxkLmV4dHJhLm9wdGlvbnNcIiBbdmFsdWVdPVwib3B0aW9uLmlkXCI+e3sgb3B0aW9uLnRpdGxlIH19PC9tYXQtYnV0dG9uLXRvZ2dsZT5cclxuPC9tYXQtYnV0dG9uLXRvZ2dsZS1ncm91cD5cclxuXHJcbiJdfQ==