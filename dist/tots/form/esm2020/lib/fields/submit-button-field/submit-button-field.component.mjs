import { Component, Inject } from '@angular/core';
import { TotsBaseFieldComponent } from '../tots-base-field.component';
import { TOTS_FORM_BUTTONS_CONFIG } from '../../entities/tots-buttons-config';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/material/button";
import * as i3 from "../../entities/tots-buttons-config";
export class SubmitButtonFieldComponent extends TotsBaseFieldComponent {
    constructor(totsButtonConfig) {
        super();
        this.totsButtonConfig = totsButtonConfig;
    }
    ngOnInit() {
        this.matColor = this.field.extra?.matColor || this.totsButtonConfig.positiveButtonColor;
        this.matButtonDirective = this.field.extra?.matButtonDirective || this.totsButtonConfig.positiveButtonMaterialDirective;
    }
    onClick() {
        if (Array.isArray(this.field.key)) {
            this.onAction.next({ key: this.field.key.join('_'), item: {} });
        }
        else {
            this.onAction.next({ key: this.field.key, item: {} });
        }
    }
    static updateFormByItem(group, item, field) { }
    static updateItemByForm(group, item, field) { }
}
SubmitButtonFieldComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: SubmitButtonFieldComponent, deps: [{ token: TOTS_FORM_BUTTONS_CONFIG }], target: i0.ɵɵFactoryTarget.Component });
SubmitButtonFieldComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.3", type: SubmitButtonFieldComponent, selector: "tots-submit-button-field", usesInheritance: true, ngImport: i0, template: "<button\r\n    mat-button\r\n    [ngClass]=\"{\r\n        'mat-mdc-button': matButtonDirective=='mat-button',\r\n        'mat-mdc-unelevated-button mdc-button--unelevated': matButtonDirective=='mat-flat-button',\r\n        'mat-mdc-raised-button mdc-button--raised': matButtonDirective=='mat-raised-button',\r\n        'mat-mdc-outlined-button mdc-button--outlined': matButtonDirective=='mat-stroked-button'\r\n      }\"\r\n    type=\"button\"\r\n    [color]=\"matColor\"\r\n    [disabled]=\"!group.valid\"\r\n    (click)=\"onClick()\"\r\n>\r\n    {{ field.label }}\r\n</button>", styles: ["button{width:100%}\n"], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "component", type: i2.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: SubmitButtonFieldComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tots-submit-button-field', template: "<button\r\n    mat-button\r\n    [ngClass]=\"{\r\n        'mat-mdc-button': matButtonDirective=='mat-button',\r\n        'mat-mdc-unelevated-button mdc-button--unelevated': matButtonDirective=='mat-flat-button',\r\n        'mat-mdc-raised-button mdc-button--raised': matButtonDirective=='mat-raised-button',\r\n        'mat-mdc-outlined-button mdc-button--outlined': matButtonDirective=='mat-stroked-button'\r\n      }\"\r\n    type=\"button\"\r\n    [color]=\"matColor\"\r\n    [disabled]=\"!group.valid\"\r\n    (click)=\"onClick()\"\r\n>\r\n    {{ field.label }}\r\n</button>", styles: ["button{width:100%}\n"] }]
        }], ctorParameters: function () { return [{ type: i3.TotsFormButtonsConfig, decorators: [{
                    type: Inject,
                    args: [TOTS_FORM_BUTTONS_CONFIG]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VibWl0LWJ1dHRvbi1maWVsZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy90b3RzL2Zvcm0vc3JjL2xpYi9maWVsZHMvc3VibWl0LWJ1dHRvbi1maWVsZC9zdWJtaXQtYnV0dG9uLWZpZWxkLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3RvdHMvZm9ybS9zcmMvbGliL2ZpZWxkcy9zdWJtaXQtYnV0dG9uLWZpZWxkL3N1Ym1pdC1idXR0b24tZmllbGQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFHMUQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFFdEUsT0FBTyxFQUE4Qix3QkFBd0IsRUFBeUIsTUFBTSxvQ0FBb0MsQ0FBQzs7Ozs7QUFPakksTUFBTSxPQUFPLDBCQUEyQixTQUFRLHNCQUFzQjtJQUtwRSxZQUF3RCxnQkFBdUM7UUFDN0YsS0FBSyxFQUFFLENBQUM7UUFEOEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUF1QjtJQUUvRixDQUFDO0lBRVEsUUFBUTtRQUNmLElBQUksQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsUUFBUSxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxtQkFBbUIsQ0FBQztRQUN4RixJQUFJLENBQUMsa0JBQWtCLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLEVBQUUsa0JBQWtCLElBQUksSUFBSSxDQUFDLGdCQUFnQixDQUFDLCtCQUErQixDQUFDO0lBQzFILENBQUM7SUFFRCxPQUFPO1FBQ0wsSUFBRyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUM7WUFDL0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRSxHQUFHLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsQ0FBQyxDQUFDO1NBQ2pFO2FBQU07WUFDTCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQztTQUN2RDtJQUNILENBQUM7SUFFRCxNQUFNLENBQVUsZ0JBQWdCLENBQUMsS0FBdUIsRUFBRSxJQUFTLEVBQUUsS0FBb0IsSUFBSSxDQUFDO0lBRTlGLE1BQU0sQ0FBVSxnQkFBZ0IsQ0FBQyxLQUF1QixFQUFFLElBQVMsRUFBRSxLQUFvQixJQUFJLENBQUM7O3VIQXhCbkYsMEJBQTBCLGtCQUtqQix3QkFBd0I7MkdBTGpDLDBCQUEwQix1RkNadkMsb2tCQWNTOzJGREZJLDBCQUEwQjtrQkFMdEMsU0FBUzsrQkFDRSwwQkFBMEI7OzBCQVN2QixNQUFNOzJCQUFDLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVW50eXBlZEZvcm1Hcm91cCB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgVG90c0ZpZWxkRm9ybSB9IGZyb20gJy4uLy4uL2VudGl0aWVzL3RvdHMtZmllbGQtZm9ybSc7XHJcbmltcG9ydCB7IFRvdHNCYXNlRmllbGRDb21wb25lbnQgfSBmcm9tICcuLi90b3RzLWJhc2UtZmllbGQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgVGhlbWVQYWxldHRlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvY29yZSc7XHJcbmltcG9ydCB7IFRvdHNGb3JtQnV0dG9uTWF0RGlyZWN0aXZlLCBUT1RTX0ZPUk1fQlVUVE9OU19DT05GSUcsIFRvdHNGb3JtQnV0dG9uc0NvbmZpZyB9IGZyb20gJy4uLy4uL2VudGl0aWVzL3RvdHMtYnV0dG9ucy1jb25maWcnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICd0b3RzLXN1Ym1pdC1idXR0b24tZmllbGQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9zdWJtaXQtYnV0dG9uLWZpZWxkLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9zdWJtaXQtYnV0dG9uLWZpZWxkLmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU3VibWl0QnV0dG9uRmllbGRDb21wb25lbnQgZXh0ZW5kcyBUb3RzQmFzZUZpZWxkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcbiAgbWF0Q29sb3IgOiBUaGVtZVBhbGV0dGU7XHJcbiAgbWF0QnV0dG9uRGlyZWN0aXZlISA6IFRvdHNGb3JtQnV0dG9uTWF0RGlyZWN0aXZlO1xyXG5cclxuICBjb25zdHJ1Y3RvcihASW5qZWN0KFRPVFNfRk9STV9CVVRUT05TX0NPTkZJRykgcHJvdGVjdGVkIHRvdHNCdXR0b25Db25maWc6IFRvdHNGb3JtQnV0dG9uc0NvbmZpZykge1xyXG4gICAgc3VwZXIoKTtcclxuICB9XHJcblxyXG4gIG92ZXJyaWRlIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgdGhpcy5tYXRDb2xvciA9IHRoaXMuZmllbGQuZXh0cmE/Lm1hdENvbG9yIHx8IHRoaXMudG90c0J1dHRvbkNvbmZpZy5wb3NpdGl2ZUJ1dHRvbkNvbG9yO1xyXG4gICAgdGhpcy5tYXRCdXR0b25EaXJlY3RpdmUgPSB0aGlzLmZpZWxkLmV4dHJhPy5tYXRCdXR0b25EaXJlY3RpdmUgfHwgdGhpcy50b3RzQnV0dG9uQ29uZmlnLnBvc2l0aXZlQnV0dG9uTWF0ZXJpYWxEaXJlY3RpdmU7XHJcbiAgfVxyXG5cclxuICBvbkNsaWNrKCkge1xyXG4gICAgaWYoQXJyYXkuaXNBcnJheSh0aGlzLmZpZWxkLmtleSkpe1xyXG4gICAgICB0aGlzLm9uQWN0aW9uLm5leHQoeyBrZXk6IHRoaXMuZmllbGQua2V5LmpvaW4oJ18nKSwgaXRlbToge30gfSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLm9uQWN0aW9uLm5leHQoeyBrZXk6IHRoaXMuZmllbGQua2V5LCBpdGVtOiB7fSB9KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHN0YXRpYyBvdmVycmlkZSB1cGRhdGVGb3JtQnlJdGVtKGdyb3VwOiBVbnR5cGVkRm9ybUdyb3VwLCBpdGVtOiBhbnksIGZpZWxkOiBUb3RzRmllbGRGb3JtKSB7IH1cclxuXHJcbiAgc3RhdGljIG92ZXJyaWRlIHVwZGF0ZUl0ZW1CeUZvcm0oZ3JvdXA6IFVudHlwZWRGb3JtR3JvdXAsIGl0ZW06IGFueSwgZmllbGQ6IFRvdHNGaWVsZEZvcm0pIHsgfVxyXG59XHJcbiIsIjxidXR0b25cclxuICAgIG1hdC1idXR0b25cclxuICAgIFtuZ0NsYXNzXT1cIntcclxuICAgICAgICAnbWF0LW1kYy1idXR0b24nOiBtYXRCdXR0b25EaXJlY3RpdmU9PSdtYXQtYnV0dG9uJyxcclxuICAgICAgICAnbWF0LW1kYy11bmVsZXZhdGVkLWJ1dHRvbiBtZGMtYnV0dG9uLS11bmVsZXZhdGVkJzogbWF0QnV0dG9uRGlyZWN0aXZlPT0nbWF0LWZsYXQtYnV0dG9uJyxcclxuICAgICAgICAnbWF0LW1kYy1yYWlzZWQtYnV0dG9uIG1kYy1idXR0b24tLXJhaXNlZCc6IG1hdEJ1dHRvbkRpcmVjdGl2ZT09J21hdC1yYWlzZWQtYnV0dG9uJyxcclxuICAgICAgICAnbWF0LW1kYy1vdXRsaW5lZC1idXR0b24gbWRjLWJ1dHRvbi0tb3V0bGluZWQnOiBtYXRCdXR0b25EaXJlY3RpdmU9PSdtYXQtc3Ryb2tlZC1idXR0b24nXHJcbiAgICAgIH1cIlxyXG4gICAgdHlwZT1cImJ1dHRvblwiXHJcbiAgICBbY29sb3JdPVwibWF0Q29sb3JcIlxyXG4gICAgW2Rpc2FibGVkXT1cIiFncm91cC52YWxpZFwiXHJcbiAgICAoY2xpY2spPVwib25DbGljaygpXCJcclxuPlxyXG4gICAge3sgZmllbGQubGFiZWwgfX1cclxuPC9idXR0b24+Il19