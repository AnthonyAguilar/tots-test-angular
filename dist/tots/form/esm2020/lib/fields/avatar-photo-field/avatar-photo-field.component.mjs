import { Component } from '@angular/core';
import { TotsBaseFieldComponent } from '../tots-base-field.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/material/button";
import * as i4 from "@angular/material/progress-spinner";
import * as i5 from "@angular/material/icon";
import * as i6 from "@angular/material/tooltip";
export class AvatarPhotoFieldComponent extends TotsBaseFieldComponent {
    constructor() {
        super(...arguments);
        this.isUploading = false;
    }
    onChange(target) {
        // Verify if selected one file
        if (target.files.length == 0) {
            return;
        }
        // Call Start uploading
        this.isUploading = true;
        // For each all files selected
        for (let i = 0; i < target.files.length; i++) {
            this.uploadFile(target.files[i]);
        }
    }
    uploadFile(file) {
        this.field.extra.service.upload(file).subscribe((result) => {
            this.input.setValue(result.url);
            this.isUploading = false;
        });
    }
    getButtonText() {
        if (this.field.extra && this.field.extra.button_text) {
            return this.field.extra.button_text;
        }
        return 'Upload photo here';
    }
    getRemoveText() {
        if (this.field.extra && this.field.extra.remove_text) {
            return this.field.extra.remove_text;
        }
        return 'Delete image';
    }
    getErrorImage() {
        if (this.field.extra && this.field.extra.error_image) {
            return this.field.extra.error_image;
        }
        return 'https://storage.googleapis.com/tots-send-public/user-avatar-empty.png';
    }
}
AvatarPhotoFieldComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: AvatarPhotoFieldComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
AvatarPhotoFieldComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.3", type: AvatarPhotoFieldComponent, selector: "avatar-photo-field", usesInheritance: true, ngImport: i0, template: "<div class=\"avatar-photo-field\">\r\n    <input type=\"hidden\" [formControl]=\"input\" />\r\n\r\n    <input #inputFile type=\"file\" accept=\"image/png, image/jpeg, image/gif\" style=\"display: none;\" (change)=\"onChange($event.target)\">\r\n\r\n    <mat-spinner *ngIf=\"isUploading\" [diameter]=\"50\"></mat-spinner>\r\n    <button *ngIf=\"(input.value == ''||input.value == undefined) && !isUploading\" mat-stroked-button class=\"container-image btn-upload-image\" (click)=\"inputFile.click()\">\r\n        <mat-icon>collections</mat-icon> <br> {{getButtonText()}}\r\n    </button>\r\n    <div *ngIf=\"(input.value != '' && input.value != undefined) && !isUploading\" class=\"container-image\" (click)=\"inputFile.click()\">\r\n        <img [src]=\"input.value\" onerror=\"this.src='https://storage.googleapis.com/tots-send-public/user-avatar-empty.png'\" />\r\n    </div>\r\n    <button *ngIf=\"(input.value != '' && input.value != undefined) && !isUploading\" mat-icon-button matTooltip=\"{{getRemoveText()}}\" class=\"btn-delete\" color=\"warn\" (click)=\"input.setValue('')\"><mat-icon>delete</mat-icon></button>\r\n</div>", styles: [".avatar-photo-field{position:relative;border-radius:50%;width:8em;min-width:8em;height:8em;margin:1em 0;color:#000}.avatar-photo-field img{width:100%;height:100%;object-fit:cover}.avatar-photo-field:hover .btn-delete{opacity:1;bottom:-1.2em}.avatar-photo-field .container-image{width:100%;height:100%;padding:0;border-radius:50%;overflow:hidden;white-space:normal;line-height:1.5;cursor:pointer}.avatar-photo-field .btn-upload-image{text-transform:initial;opacity:.5;padding:.5em;font-size:.8rem!important}.avatar-photo-field .btn-upload-image mat-icon{margin-bottom:.3em}.avatar-photo-field .btn-delete{background-color:#fff;opacity:0;position:absolute;bottom:0;left:50%;transform:translate(-50%);-o-transform:translateX(-50%);-ms-transform:translateX(-50%);-moz-transform:translateX(-50%);-webkit-transform:translateX(-50%)}.avatar-photo-field mat-spinner{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);-o-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-webkit-transform:translate(-50%,-50%)}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i3.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "component", type: i3.MatIconButton, selector: "button[mat-icon-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "component", type: i4.MatProgressSpinner, selector: "mat-progress-spinner, mat-spinner", inputs: ["color", "mode", "value", "diameter", "strokeWidth"], exportAs: ["matProgressSpinner"] }, { kind: "component", type: i5.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: i6.MatTooltip, selector: "[matTooltip]", exportAs: ["matTooltip"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: AvatarPhotoFieldComponent, decorators: [{
            type: Component,
            args: [{ selector: 'avatar-photo-field', template: "<div class=\"avatar-photo-field\">\r\n    <input type=\"hidden\" [formControl]=\"input\" />\r\n\r\n    <input #inputFile type=\"file\" accept=\"image/png, image/jpeg, image/gif\" style=\"display: none;\" (change)=\"onChange($event.target)\">\r\n\r\n    <mat-spinner *ngIf=\"isUploading\" [diameter]=\"50\"></mat-spinner>\r\n    <button *ngIf=\"(input.value == ''||input.value == undefined) && !isUploading\" mat-stroked-button class=\"container-image btn-upload-image\" (click)=\"inputFile.click()\">\r\n        <mat-icon>collections</mat-icon> <br> {{getButtonText()}}\r\n    </button>\r\n    <div *ngIf=\"(input.value != '' && input.value != undefined) && !isUploading\" class=\"container-image\" (click)=\"inputFile.click()\">\r\n        <img [src]=\"input.value\" onerror=\"this.src='https://storage.googleapis.com/tots-send-public/user-avatar-empty.png'\" />\r\n    </div>\r\n    <button *ngIf=\"(input.value != '' && input.value != undefined) && !isUploading\" mat-icon-button matTooltip=\"{{getRemoveText()}}\" class=\"btn-delete\" color=\"warn\" (click)=\"input.setValue('')\"><mat-icon>delete</mat-icon></button>\r\n</div>", styles: [".avatar-photo-field{position:relative;border-radius:50%;width:8em;min-width:8em;height:8em;margin:1em 0;color:#000}.avatar-photo-field img{width:100%;height:100%;object-fit:cover}.avatar-photo-field:hover .btn-delete{opacity:1;bottom:-1.2em}.avatar-photo-field .container-image{width:100%;height:100%;padding:0;border-radius:50%;overflow:hidden;white-space:normal;line-height:1.5;cursor:pointer}.avatar-photo-field .btn-upload-image{text-transform:initial;opacity:.5;padding:.5em;font-size:.8rem!important}.avatar-photo-field .btn-upload-image mat-icon{margin-bottom:.3em}.avatar-photo-field .btn-delete{background-color:#fff;opacity:0;position:absolute;bottom:0;left:50%;transform:translate(-50%);-o-transform:translateX(-50%);-ms-transform:translateX(-50%);-moz-transform:translateX(-50%);-webkit-transform:translateX(-50%)}.avatar-photo-field mat-spinner{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);-o-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);-moz-transform:translate(-50%,-50%);-webkit-transform:translate(-50%,-50%)}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXZhdGFyLXBob3RvLWZpZWxkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3RvdHMvZm9ybS9zcmMvbGliL2ZpZWxkcy9hdmF0YXItcGhvdG8tZmllbGQvYXZhdGFyLXBob3RvLWZpZWxkLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3RvdHMvZm9ybS9zcmMvbGliL2ZpZWxkcy9hdmF0YXItcGhvdG8tZmllbGQvYXZhdGFyLXBob3RvLWZpZWxkLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sOEJBQThCLENBQUM7Ozs7Ozs7O0FBT3RFLE1BQU0sT0FBTyx5QkFBMEIsU0FBUSxzQkFBc0I7SUFMckU7O1FBT0UsZ0JBQVcsR0FBRyxLQUFLLENBQUM7S0E2Q3JCO0lBM0NDLFFBQVEsQ0FBQyxNQUFXO1FBQ2xCLDhCQUE4QjtRQUM5QixJQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUMsTUFBTSxJQUFJLENBQUMsRUFBQztZQUMxQixPQUFPO1NBQ1I7UUFDRCx1QkFBdUI7UUFDdkIsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUM7UUFDeEIsOEJBQThCO1FBQzlCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtZQUM1QyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNsQztJQUNILENBQUM7SUFFRCxVQUFVLENBQUMsSUFBVTtRQUNuQixJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLE1BQVcsRUFBRSxFQUFFO1lBQzlELElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUNoQyxJQUFJLENBQUMsV0FBVyxHQUFHLEtBQUssQ0FBQztRQUMzQixDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxhQUFhO1FBQ1gsSUFBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUM7WUFDbEQsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUM7U0FDckM7UUFFRCxPQUFPLG1CQUFtQixDQUFDO0lBQzdCLENBQUM7SUFFRCxhQUFhO1FBQ1gsSUFBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxXQUFXLEVBQUM7WUFDbEQsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUM7U0FDckM7UUFFRCxPQUFPLGNBQWMsQ0FBQztJQUN4QixDQUFDO0lBRUQsYUFBYTtRQUNYLElBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsV0FBVyxFQUFDO1lBQ2xELE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDO1NBQ3JDO1FBRUQsT0FBTyx1RUFBdUUsQ0FBQztJQUNqRixDQUFDOztzSEE5Q1UseUJBQXlCOzBHQUF6Qix5QkFBeUIsaUZDUnRDLDZtQ0FhTTsyRkRMTyx5QkFBeUI7a0JBTHJDLFNBQVM7K0JBQ0Usb0JBQW9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRvdHNCYXNlRmllbGRDb21wb25lbnQgfSBmcm9tICcuLi90b3RzLWJhc2UtZmllbGQuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnYXZhdGFyLXBob3RvLWZpZWxkJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vYXZhdGFyLXBob3RvLWZpZWxkLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9hdmF0YXItcGhvdG8tZmllbGQuY29tcG9uZW50LnNjc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQXZhdGFyUGhvdG9GaWVsZENvbXBvbmVudCBleHRlbmRzIFRvdHNCYXNlRmllbGRDb21wb25lbnQge1xyXG5cclxuICBpc1VwbG9hZGluZyA9IGZhbHNlO1xyXG5cclxuICBvbkNoYW5nZSh0YXJnZXQ6IGFueSkge1xyXG4gICAgLy8gVmVyaWZ5IGlmIHNlbGVjdGVkIG9uZSBmaWxlXHJcbiAgICBpZih0YXJnZXQuZmlsZXMubGVuZ3RoID09IDApe1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICAvLyBDYWxsIFN0YXJ0IHVwbG9hZGluZ1xyXG4gICAgdGhpcy5pc1VwbG9hZGluZyA9IHRydWU7XHJcbiAgICAvLyBGb3IgZWFjaCBhbGwgZmlsZXMgc2VsZWN0ZWRcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGFyZ2V0LmZpbGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIHRoaXMudXBsb2FkRmlsZSh0YXJnZXQuZmlsZXNbaV0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgdXBsb2FkRmlsZShmaWxlOiBGaWxlKSB7XHJcbiAgICB0aGlzLmZpZWxkLmV4dHJhLnNlcnZpY2UudXBsb2FkKGZpbGUpLnN1YnNjcmliZSgocmVzdWx0OiBhbnkpID0+IHtcclxuICAgICAgdGhpcy5pbnB1dC5zZXRWYWx1ZShyZXN1bHQudXJsKTtcclxuICAgICAgdGhpcy5pc1VwbG9hZGluZyA9IGZhbHNlO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBnZXRCdXR0b25UZXh0KCkge1xyXG4gICAgaWYodGhpcy5maWVsZC5leHRyYSAmJiB0aGlzLmZpZWxkLmV4dHJhLmJ1dHRvbl90ZXh0KXtcclxuICAgICAgcmV0dXJuIHRoaXMuZmllbGQuZXh0cmEuYnV0dG9uX3RleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuICdVcGxvYWQgcGhvdG8gaGVyZSc7XHJcbiAgfVxyXG5cclxuICBnZXRSZW1vdmVUZXh0KCkge1xyXG4gICAgaWYodGhpcy5maWVsZC5leHRyYSAmJiB0aGlzLmZpZWxkLmV4dHJhLnJlbW92ZV90ZXh0KXtcclxuICAgICAgcmV0dXJuIHRoaXMuZmllbGQuZXh0cmEucmVtb3ZlX3RleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuICdEZWxldGUgaW1hZ2UnO1xyXG4gIH1cclxuXHJcbiAgZ2V0RXJyb3JJbWFnZSgpIHtcclxuICAgIGlmKHRoaXMuZmllbGQuZXh0cmEgJiYgdGhpcy5maWVsZC5leHRyYS5lcnJvcl9pbWFnZSl7XHJcbiAgICAgIHJldHVybiB0aGlzLmZpZWxkLmV4dHJhLmVycm9yX2ltYWdlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiAnaHR0cHM6Ly9zdG9yYWdlLmdvb2dsZWFwaXMuY29tL3RvdHMtc2VuZC1wdWJsaWMvdXNlci1hdmF0YXItZW1wdHkucG5nJztcclxuICB9XHJcbn1cclxuIiwiPGRpdiBjbGFzcz1cImF2YXRhci1waG90by1maWVsZFwiPlxyXG4gICAgPGlucHV0IHR5cGU9XCJoaWRkZW5cIiBbZm9ybUNvbnRyb2xdPVwiaW5wdXRcIiAvPlxyXG5cclxuICAgIDxpbnB1dCAjaW5wdXRGaWxlIHR5cGU9XCJmaWxlXCIgYWNjZXB0PVwiaW1hZ2UvcG5nLCBpbWFnZS9qcGVnLCBpbWFnZS9naWZcIiBzdHlsZT1cImRpc3BsYXk6IG5vbmU7XCIgKGNoYW5nZSk9XCJvbkNoYW5nZSgkZXZlbnQudGFyZ2V0KVwiPlxyXG5cclxuICAgIDxtYXQtc3Bpbm5lciAqbmdJZj1cImlzVXBsb2FkaW5nXCIgW2RpYW1ldGVyXT1cIjUwXCI+PC9tYXQtc3Bpbm5lcj5cclxuICAgIDxidXR0b24gKm5nSWY9XCIoaW5wdXQudmFsdWUgPT0gJyd8fGlucHV0LnZhbHVlID09IHVuZGVmaW5lZCkgJiYgIWlzVXBsb2FkaW5nXCIgbWF0LXN0cm9rZWQtYnV0dG9uIGNsYXNzPVwiY29udGFpbmVyLWltYWdlIGJ0bi11cGxvYWQtaW1hZ2VcIiAoY2xpY2spPVwiaW5wdXRGaWxlLmNsaWNrKClcIj5cclxuICAgICAgICA8bWF0LWljb24+Y29sbGVjdGlvbnM8L21hdC1pY29uPiA8YnI+IHt7Z2V0QnV0dG9uVGV4dCgpfX1cclxuICAgIDwvYnV0dG9uPlxyXG4gICAgPGRpdiAqbmdJZj1cIihpbnB1dC52YWx1ZSAhPSAnJyAmJiBpbnB1dC52YWx1ZSAhPSB1bmRlZmluZWQpICYmICFpc1VwbG9hZGluZ1wiIGNsYXNzPVwiY29udGFpbmVyLWltYWdlXCIgKGNsaWNrKT1cImlucHV0RmlsZS5jbGljaygpXCI+XHJcbiAgICAgICAgPGltZyBbc3JjXT1cImlucHV0LnZhbHVlXCIgb25lcnJvcj1cInRoaXMuc3JjPSdodHRwczovL3N0b3JhZ2UuZ29vZ2xlYXBpcy5jb20vdG90cy1zZW5kLXB1YmxpYy91c2VyLWF2YXRhci1lbXB0eS5wbmcnXCIgLz5cclxuICAgIDwvZGl2PlxyXG4gICAgPGJ1dHRvbiAqbmdJZj1cIihpbnB1dC52YWx1ZSAhPSAnJyAmJiBpbnB1dC52YWx1ZSAhPSB1bmRlZmluZWQpICYmICFpc1VwbG9hZGluZ1wiIG1hdC1pY29uLWJ1dHRvbiBtYXRUb29sdGlwPVwie3tnZXRSZW1vdmVUZXh0KCl9fVwiIGNsYXNzPVwiYnRuLWRlbGV0ZVwiIGNvbG9yPVwid2FyblwiIChjbGljayk9XCJpbnB1dC5zZXRWYWx1ZSgnJylcIj48bWF0LWljb24+ZGVsZXRlPC9tYXQtaWNvbj48L2J1dHRvbj5cclxuPC9kaXY+Il19