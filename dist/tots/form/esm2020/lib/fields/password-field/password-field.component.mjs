import { Component } from '@angular/core';
import { TotsBaseFieldComponent } from '../tots-base-field.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/material/input";
import * as i5 from "@angular/material/button";
import * as i6 from "@angular/material/icon";
export class PasswordFieldComponent extends TotsBaseFieldComponent {
    constructor() {
        super(...arguments);
        this.showPassword = false;
    }
    getCaption() {
        return this.field.extra?.caption;
    }
    togglePassword(event) {
        event.stopPropagation();
        this.showPassword = !this.showPassword;
    }
}
PasswordFieldComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: PasswordFieldComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
PasswordFieldComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.3", type: PasswordFieldComponent, selector: "tots-password-field", usesInheritance: true, ngImport: i0, template: "<mat-form-field *ngIf=\"input\" class=\"{{getClases()}}\" [appearance]=\"getAppearance()\">\r\n    <mat-label *ngIf=\"field.label\"> {{ field.label }} </mat-label>\r\n    <input matInput [type]=\"showPassword && group.enabled ? 'text' : 'password'\" [formControl]=\"input\" [placeholder]=\"getPlaceholder()\"/>\r\n    <button mat-icon-button matSuffix type=\"button\" (click)=\"togglePassword($event)\" tabindex=\"-1\" [disabled]=\"group.disabled\">\r\n        <mat-icon>{{showPassword ? \"visibility_off\" : \"visibility\"}}</mat-icon>\r\n    </button>\r\n    <mat-hint *ngIf=\"getCaption() != ''\" [align]=\"'end'\"> {{getCaption()}} </mat-hint>\r\n    <mat-error *ngIf=\"hasError()\">{{getMessageError()}}</mat-error>\r\n</mat-form-field>", styles: ["mat-form-field{width:100%}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i3.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i3.MatLabel, selector: "mat-label" }, { kind: "directive", type: i3.MatHint, selector: "mat-hint", inputs: ["align", "id"] }, { kind: "directive", type: i3.MatError, selector: "mat-error, [matError]", inputs: ["id"] }, { kind: "directive", type: i3.MatSuffix, selector: "[matSuffix], [matIconSuffix], [matTextSuffix]", inputs: ["matTextSuffix"] }, { kind: "directive", type: i4.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "component", type: i5.MatIconButton, selector: "button[mat-icon-button]", inputs: ["disabled", "disableRipple", "color"], exportAs: ["matButton"] }, { kind: "component", type: i6.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: PasswordFieldComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tots-password-field', template: "<mat-form-field *ngIf=\"input\" class=\"{{getClases()}}\" [appearance]=\"getAppearance()\">\r\n    <mat-label *ngIf=\"field.label\"> {{ field.label }} </mat-label>\r\n    <input matInput [type]=\"showPassword && group.enabled ? 'text' : 'password'\" [formControl]=\"input\" [placeholder]=\"getPlaceholder()\"/>\r\n    <button mat-icon-button matSuffix type=\"button\" (click)=\"togglePassword($event)\" tabindex=\"-1\" [disabled]=\"group.disabled\">\r\n        <mat-icon>{{showPassword ? \"visibility_off\" : \"visibility\"}}</mat-icon>\r\n    </button>\r\n    <mat-hint *ngIf=\"getCaption() != ''\" [align]=\"'end'\"> {{getCaption()}} </mat-hint>\r\n    <mat-error *ngIf=\"hasError()\">{{getMessageError()}}</mat-error>\r\n</mat-form-field>", styles: ["mat-form-field{width:100%}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmQtZmllbGQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvdG90cy9mb3JtL3NyYy9saWIvZmllbGRzL3Bhc3N3b3JkLWZpZWxkL3Bhc3N3b3JkLWZpZWxkLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3RvdHMvZm9ybS9zcmMvbGliL2ZpZWxkcy9wYXNzd29yZC1maWVsZC9wYXNzd29yZC1maWVsZC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDOzs7Ozs7OztBQU90RSxNQUFNLE9BQU8sc0JBQXVCLFNBQVEsc0JBQXNCO0lBTGxFOztRQU9XLGlCQUFZLEdBQUcsS0FBSyxDQUFDO0tBVS9CO0lBUlUsVUFBVTtRQUNuQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQztJQUNsQyxDQUFDO0lBRVMsY0FBYyxDQUFDLEtBQWdCO1FBQ3hDLEtBQUssQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUN4QixJQUFJLENBQUMsWUFBWSxHQUFHLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQztJQUN4QyxDQUFDOzttSEFYVyxzQkFBc0I7dUdBQXRCLHNCQUFzQixrRkNSbkMsdXVCQVFpQjsyRkRBSixzQkFBc0I7a0JBTGxDLFNBQVM7K0JBQ0MscUJBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVG90c0Jhc2VGaWVsZENvbXBvbmVudCB9IGZyb20gJy4uL3RvdHMtYmFzZS1maWVsZC5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcblx0c2VsZWN0b3I6ICd0b3RzLXBhc3N3b3JkLWZpZWxkJyxcclxuXHR0ZW1wbGF0ZVVybDogJy4vcGFzc3dvcmQtZmllbGQuY29tcG9uZW50Lmh0bWwnLFxyXG5cdHN0eWxlVXJsczogWycuL3Bhc3N3b3JkLWZpZWxkLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFBhc3N3b3JkRmllbGRDb21wb25lbnQgZXh0ZW5kcyBUb3RzQmFzZUZpZWxkQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuXHJcblx0cHJvdGVjdGVkIHNob3dQYXNzd29yZCA9IGZhbHNlO1xyXG5cclxuXHRwcm90ZWN0ZWQgZ2V0Q2FwdGlvbigpIDogc3RyaW5nfHVuZGVmaW5lZCB7XHJcblx0XHRyZXR1cm4gdGhpcy5maWVsZC5leHRyYT8uY2FwdGlvbjtcclxuXHR9XHJcblxyXG5cdHByb3RlY3RlZCB0b2dnbGVQYXNzd29yZChldmVudDpNb3VzZUV2ZW50KSB7XHJcblx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuXHRcdHRoaXMuc2hvd1Bhc3N3b3JkID0gIXRoaXMuc2hvd1Bhc3N3b3JkO1xyXG5cdH1cclxufVxyXG4iLCI8bWF0LWZvcm0tZmllbGQgKm5nSWY9XCJpbnB1dFwiIGNsYXNzPVwie3tnZXRDbGFzZXMoKX19XCIgW2FwcGVhcmFuY2VdPVwiZ2V0QXBwZWFyYW5jZSgpXCI+XHJcbiAgICA8bWF0LWxhYmVsICpuZ0lmPVwiZmllbGQubGFiZWxcIj4ge3sgZmllbGQubGFiZWwgfX0gPC9tYXQtbGFiZWw+XHJcbiAgICA8aW5wdXQgbWF0SW5wdXQgW3R5cGVdPVwic2hvd1Bhc3N3b3JkICYmIGdyb3VwLmVuYWJsZWQgPyAndGV4dCcgOiAncGFzc3dvcmQnXCIgW2Zvcm1Db250cm9sXT1cImlucHV0XCIgW3BsYWNlaG9sZGVyXT1cImdldFBsYWNlaG9sZGVyKClcIi8+XHJcbiAgICA8YnV0dG9uIG1hdC1pY29uLWJ1dHRvbiBtYXRTdWZmaXggdHlwZT1cImJ1dHRvblwiIChjbGljayk9XCJ0b2dnbGVQYXNzd29yZCgkZXZlbnQpXCIgdGFiaW5kZXg9XCItMVwiIFtkaXNhYmxlZF09XCJncm91cC5kaXNhYmxlZFwiPlxyXG4gICAgICAgIDxtYXQtaWNvbj57e3Nob3dQYXNzd29yZCA/IFwidmlzaWJpbGl0eV9vZmZcIiA6IFwidmlzaWJpbGl0eVwifX08L21hdC1pY29uPlxyXG4gICAgPC9idXR0b24+XHJcbiAgICA8bWF0LWhpbnQgKm5nSWY9XCJnZXRDYXB0aW9uKCkgIT0gJydcIiBbYWxpZ25dPVwiJ2VuZCdcIj4ge3tnZXRDYXB0aW9uKCl9fSA8L21hdC1oaW50PlxyXG4gICAgPG1hdC1lcnJvciAqbmdJZj1cImhhc0Vycm9yKClcIj57e2dldE1lc3NhZ2VFcnJvcigpfX08L21hdC1lcnJvcj5cclxuPC9tYXQtZm9ybS1maWVsZD4iXX0=