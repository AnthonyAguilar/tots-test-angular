import { Component } from '@angular/core';
import { SelectFieldComponent } from '../select-field/select-field.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/material/select";
import * as i5 from "@angular/material/core";
export class SelectObsFieldComponent extends SelectFieldComponent {
    ngOnInit() {
        super.ngOnInit();
        this.loadOptions();
    }
    displayId(item) {
        if (item == undefined) {
            return '';
        }
        return item[this.field.extra.selected_key];
    }
    displayOption(item) {
        if (item == undefined) {
            return '';
        }
        return item[this.field.extra.display_key];
    }
    loadOptions() {
        let obs = this.field.extra.obs;
        obs().subscribe(options => this.options = options);
    }
}
SelectObsFieldComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: SelectObsFieldComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
SelectObsFieldComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.3", type: SelectObsFieldComponent, selector: "tots-select-obs-field", usesInheritance: true, ngImport: i0, template: "<mat-form-field *ngIf=\"input && options\" [appearance]=\"getAppearance()\" class=\"{{getClases()}}\">\r\n  <mat-label *ngIf=\"field.label\"> {{ field.label }} </mat-label>\r\n\r\n  <mat-select [formControl]=\"input\" [placeholder]=\"getPlaceholder()\" [multiple]=\"isMultiple()\">\r\n      <mat-option *ngFor=\"let option of options\" [value]=\"displayId(option)\"> {{ displayOption(option) }} </mat-option>\r\n  </mat-select>\r\n\r\n  <mat-hint *ngIf=\"getCaption() != ''\" [align]=\"'end'\"> {{getCaption()}} </mat-hint>\r\n  <mat-error *ngIf=\"hasError()\">{{getMessageError()}}</mat-error>\r\n</mat-form-field>\r\n", styles: ["mat-form-field{width:100%}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i3.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i3.MatLabel, selector: "mat-label" }, { kind: "directive", type: i3.MatHint, selector: "mat-hint", inputs: ["align", "id"] }, { kind: "directive", type: i3.MatError, selector: "mat-error, [matError]", inputs: ["id"] }, { kind: "component", type: i4.MatSelect, selector: "mat-select", inputs: ["disabled", "disableRipple", "tabIndex"], exportAs: ["matSelect"] }, { kind: "component", type: i5.MatOption, selector: "mat-option", exportAs: ["matOption"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: SelectObsFieldComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tots-select-obs-field', template: "<mat-form-field *ngIf=\"input && options\" [appearance]=\"getAppearance()\" class=\"{{getClases()}}\">\r\n  <mat-label *ngIf=\"field.label\"> {{ field.label }} </mat-label>\r\n\r\n  <mat-select [formControl]=\"input\" [placeholder]=\"getPlaceholder()\" [multiple]=\"isMultiple()\">\r\n      <mat-option *ngFor=\"let option of options\" [value]=\"displayId(option)\"> {{ displayOption(option) }} </mat-option>\r\n  </mat-select>\r\n\r\n  <mat-hint *ngIf=\"getCaption() != ''\" [align]=\"'end'\"> {{getCaption()}} </mat-hint>\r\n  <mat-error *ngIf=\"hasError()\">{{getMessageError()}}</mat-error>\r\n</mat-form-field>\r\n", styles: ["mat-form-field{width:100%}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LW9icy1maWVsZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy90b3RzL2Zvcm0vc3JjL2xpYi9maWVsZHMvc2VsZWN0LW9icy1maWVsZC9zZWxlY3Qtb2JzLWZpZWxkLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3RvdHMvZm9ybS9zcmMvbGliL2ZpZWxkcy9zZWxlY3Qtb2JzLWZpZWxkL3NlbGVjdC1vYnMtZmllbGQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUxQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQzs7Ozs7OztBQVE5RSxNQUFNLE9BQU8sdUJBQXdCLFNBQVEsb0JBQW9CO0lBSXRELFFBQVE7UUFDZixLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7UUFDakIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3JCLENBQUM7SUFFRCxTQUFTLENBQUMsSUFBUztRQUNqQixJQUFHLElBQUksSUFBSSxTQUFTLEVBQUM7WUFDbkIsT0FBTyxFQUFFLENBQUM7U0FDWDtRQUNELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCxhQUFhLENBQUMsSUFBUztRQUNyQixJQUFHLElBQUksSUFBSSxTQUFTLEVBQUM7WUFDbkIsT0FBTyxFQUFFLENBQUM7U0FDWDtRQUNELE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxHQUFHLEdBQWlDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQztRQUM3RCxHQUFHLEVBQUUsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxDQUFDO0lBQ3JELENBQUM7O29IQTFCVSx1QkFBdUI7d0dBQXZCLHVCQUF1QixvRkNWcEMsNm1CQVVBOzJGREFhLHVCQUF1QjtrQkFMbkMsU0FBUzsrQkFDRSx1QkFBdUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVG90c0Jhc2VGaWVsZENvbXBvbmVudCB9IGZyb20gJy4uL3RvdHMtYmFzZS1maWVsZC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTZWxlY3RGaWVsZENvbXBvbmVudCB9IGZyb20gJy4uL3NlbGVjdC1maWVsZC9zZWxlY3QtZmllbGQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICd0b3RzLXNlbGVjdC1vYnMtZmllbGQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9zZWxlY3Qtb2JzLWZpZWxkLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9zZWxlY3Qtb2JzLWZpZWxkLmNvbXBvbmVudC5zY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFNlbGVjdE9ic0ZpZWxkQ29tcG9uZW50IGV4dGVuZHMgU2VsZWN0RmllbGRDb21wb25lbnQge1xyXG5cclxuICBvcHRpb25zPzogQXJyYXk8YW55PjtcclxuXHJcbiAgb3ZlcnJpZGUgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICBzdXBlci5uZ09uSW5pdCgpO1xyXG4gICAgdGhpcy5sb2FkT3B0aW9ucygpO1xyXG4gIH1cclxuXHJcbiAgZGlzcGxheUlkKGl0ZW06IGFueSk6IHN0cmluZyB7XHJcbiAgICBpZihpdGVtID09IHVuZGVmaW5lZCl7XHJcbiAgICAgIHJldHVybiAnJztcclxuICAgIH1cclxuICAgIHJldHVybiBpdGVtW3RoaXMuZmllbGQuZXh0cmEuc2VsZWN0ZWRfa2V5XTtcclxuICB9XHJcblxyXG4gIGRpc3BsYXlPcHRpb24oaXRlbTogYW55KTogc3RyaW5nIHtcclxuICAgIGlmKGl0ZW0gPT0gdW5kZWZpbmVkKXtcclxuICAgICAgcmV0dXJuICcnO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGl0ZW1bdGhpcy5maWVsZC5leHRyYS5kaXNwbGF5X2tleV07XHJcbiAgfVxyXG5cclxuICBsb2FkT3B0aW9ucygpIHtcclxuICAgIGxldCBvYnM6ICgpID0+IE9ic2VydmFibGU8QXJyYXk8YW55Pj4gPSB0aGlzLmZpZWxkLmV4dHJhLm9icztcclxuICAgIG9icygpLnN1YnNjcmliZShvcHRpb25zID0+IHRoaXMub3B0aW9ucyA9IG9wdGlvbnMpO1xyXG4gIH1cclxufVxyXG4iLCI8bWF0LWZvcm0tZmllbGQgKm5nSWY9XCJpbnB1dCAmJiBvcHRpb25zXCIgW2FwcGVhcmFuY2VdPVwiZ2V0QXBwZWFyYW5jZSgpXCIgY2xhc3M9XCJ7e2dldENsYXNlcygpfX1cIj5cclxuICA8bWF0LWxhYmVsICpuZ0lmPVwiZmllbGQubGFiZWxcIj4ge3sgZmllbGQubGFiZWwgfX0gPC9tYXQtbGFiZWw+XHJcblxyXG4gIDxtYXQtc2VsZWN0IFtmb3JtQ29udHJvbF09XCJpbnB1dFwiIFtwbGFjZWhvbGRlcl09XCJnZXRQbGFjZWhvbGRlcigpXCIgW211bHRpcGxlXT1cImlzTXVsdGlwbGUoKVwiPlxyXG4gICAgICA8bWF0LW9wdGlvbiAqbmdGb3I9XCJsZXQgb3B0aW9uIG9mIG9wdGlvbnNcIiBbdmFsdWVdPVwiZGlzcGxheUlkKG9wdGlvbilcIj4ge3sgZGlzcGxheU9wdGlvbihvcHRpb24pIH19IDwvbWF0LW9wdGlvbj5cclxuICA8L21hdC1zZWxlY3Q+XHJcblxyXG4gIDxtYXQtaGludCAqbmdJZj1cImdldENhcHRpb24oKSAhPSAnJ1wiIFthbGlnbl09XCInZW5kJ1wiPiB7e2dldENhcHRpb24oKX19IDwvbWF0LWhpbnQ+XHJcbiAgPG1hdC1lcnJvciAqbmdJZj1cImhhc0Vycm9yKClcIj57e2dldE1lc3NhZ2VFcnJvcigpfX08L21hdC1lcnJvcj5cclxuPC9tYXQtZm9ybS1maWVsZD5cclxuIl19