import { Component } from '@angular/core';
import { TotsBaseFieldComponent } from '../tots-base-field.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/material/input";
export class IntegerFieldComponent extends TotsBaseFieldComponent {
    getCaption() {
        if (this.field.extra && this.field.extra.caption) {
            return this.field.extra.caption;
        }
        return '';
    }
}
IntegerFieldComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: IntegerFieldComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
IntegerFieldComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.3", type: IntegerFieldComponent, selector: "tots-integer-field", usesInheritance: true, ngImport: i0, template: "<mat-form-field *ngIf=\"input\" class=\"{{getClases()}}\" [appearance]=\"getAppearance()\">\r\n    <mat-label *ngIf=\"field.label\"> {{ field.label }} </mat-label>\r\n    <input matInput type=\"number\" [formControl]=\"input\" [placeholder]=\"getPlaceholder()\"/>\r\n    <mat-hint *ngIf=\"getCaption() != ''\" [align]=\"'end'\"> {{getCaption()}} </mat-hint>\r\n    <mat-error *ngIf=\"hasError()\">{{getMessageError()}}</mat-error>\r\n</mat-form-field>", styles: ["mat-form-field{width:100%}\n"], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i2.NumberValueAccessor, selector: "input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]" }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i3.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i3.MatLabel, selector: "mat-label" }, { kind: "directive", type: i3.MatHint, selector: "mat-hint", inputs: ["align", "id"] }, { kind: "directive", type: i3.MatError, selector: "mat-error, [matError]", inputs: ["id"] }, { kind: "directive", type: i4.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: IntegerFieldComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tots-integer-field', template: "<mat-form-field *ngIf=\"input\" class=\"{{getClases()}}\" [appearance]=\"getAppearance()\">\r\n    <mat-label *ngIf=\"field.label\"> {{ field.label }} </mat-label>\r\n    <input matInput type=\"number\" [formControl]=\"input\" [placeholder]=\"getPlaceholder()\"/>\r\n    <mat-hint *ngIf=\"getCaption() != ''\" [align]=\"'end'\"> {{getCaption()}} </mat-hint>\r\n    <mat-error *ngIf=\"hasError()\">{{getMessageError()}}</mat-error>\r\n</mat-form-field>", styles: ["mat-form-field{width:100%}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWdlci1maWVsZC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy90b3RzL2Zvcm0vc3JjL2xpYi9maWVsZHMvaW50ZWdlci1maWVsZC9pbnRlZ2VyLWZpZWxkLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3RvdHMvZm9ybS9zcmMvbGliL2ZpZWxkcy9pbnRlZ2VyLWZpZWxkL2ludGVnZXItZmllbGQuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxQyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQzs7Ozs7O0FBT3RFLE1BQU0sT0FBTyxxQkFBc0IsU0FBUSxzQkFBc0I7SUFDL0QsVUFBVTtRQUNSLElBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFDO1lBQUUsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUM7U0FBRTtRQUNwRixPQUFPLEVBQUUsQ0FBQztJQUNaLENBQUM7O2tIQUpVLHFCQUFxQjtzR0FBckIscUJBQXFCLGlGQ1JsQyxxY0FLaUI7MkZER0oscUJBQXFCO2tCQUxqQyxTQUFTOytCQUNFLG9CQUFvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBUb3RzQmFzZUZpZWxkQ29tcG9uZW50IH0gZnJvbSAnLi4vdG90cy1iYXNlLWZpZWxkLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ3RvdHMtaW50ZWdlci1maWVsZCcsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2ludGVnZXItZmllbGQuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2ludGVnZXItZmllbGQuY29tcG9uZW50LmNzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBJbnRlZ2VyRmllbGRDb21wb25lbnQgZXh0ZW5kcyBUb3RzQmFzZUZpZWxkQ29tcG9uZW50IHtcclxuICBnZXRDYXB0aW9uKCkge1xyXG4gICAgaWYodGhpcy5maWVsZC5leHRyYSAmJiB0aGlzLmZpZWxkLmV4dHJhLmNhcHRpb24peyByZXR1cm4gdGhpcy5maWVsZC5leHRyYS5jYXB0aW9uOyB9XHJcbiAgICByZXR1cm4gJyc7XHJcbiAgfVxyXG59XHJcbiIsIjxtYXQtZm9ybS1maWVsZCAqbmdJZj1cImlucHV0XCIgY2xhc3M9XCJ7e2dldENsYXNlcygpfX1cIiBbYXBwZWFyYW5jZV09XCJnZXRBcHBlYXJhbmNlKClcIj5cclxuICAgIDxtYXQtbGFiZWwgKm5nSWY9XCJmaWVsZC5sYWJlbFwiPiB7eyBmaWVsZC5sYWJlbCB9fSA8L21hdC1sYWJlbD5cclxuICAgIDxpbnB1dCBtYXRJbnB1dCB0eXBlPVwibnVtYmVyXCIgW2Zvcm1Db250cm9sXT1cImlucHV0XCIgW3BsYWNlaG9sZGVyXT1cImdldFBsYWNlaG9sZGVyKClcIi8+XHJcbiAgICA8bWF0LWhpbnQgKm5nSWY9XCJnZXRDYXB0aW9uKCkgIT0gJydcIiBbYWxpZ25dPVwiJ2VuZCdcIj4ge3tnZXRDYXB0aW9uKCl9fSA8L21hdC1oaW50PlxyXG4gICAgPG1hdC1lcnJvciAqbmdJZj1cImhhc0Vycm9yKClcIj57e2dldE1lc3NhZ2VFcnJvcigpfX08L21hdC1lcnJvcj5cclxuPC9tYXQtZm9ybS1maWVsZD4iXX0=