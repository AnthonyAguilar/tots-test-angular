import { Component } from '@angular/core';
import { TotsBaseFieldComponent } from '../tots-base-field.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/forms";
import * as i3 from "@angular/material/form-field";
import * as i4 from "@angular/material/select";
import * as i5 from "@angular/material/core";
export class SelectFieldComponent extends TotsBaseFieldComponent {
    getCaption() {
        if (this.field.extra && this.field.extra.caption) {
            return this.field.extra.caption;
        }
        return '';
    }
    isMultiple() {
        if (this.field.extra && this.field.extra.multiple) {
            return this.field.extra.multiple;
        }
        return false;
    }
}
SelectFieldComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: SelectFieldComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
SelectFieldComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.3", type: SelectFieldComponent, selector: "tots-select-field", usesInheritance: true, ngImport: i0, template: "<mat-form-field *ngIf=\"input\" [appearance]=\"getAppearance()\" class=\"{{getClases()}}\">\r\n    <mat-label *ngIf=\"field.label\"> {{ field.label }} </mat-label>\r\n\r\n    <mat-select [formControl]=\"input\" [placeholder]=\"getPlaceholder()\" [multiple]=\"isMultiple()\">\r\n        <mat-option *ngFor=\"let option of field.extra.options\" [value]=\"option.id\"> {{ option.title }} </mat-option>\r\n    </mat-select>\r\n\r\n    <mat-hint *ngIf=\"getCaption() != ''\" [align]=\"'end'\"> {{getCaption()}} </mat-hint>\r\n    <mat-error *ngIf=\"hasError()\">{{getMessageError()}}</mat-error>\r\n</mat-form-field>", styles: ["mat-form-field{width:100%}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i2.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i2.FormControlDirective, selector: "[formControl]", inputs: ["formControl", "disabled", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { kind: "component", type: i3.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i3.MatLabel, selector: "mat-label" }, { kind: "directive", type: i3.MatHint, selector: "mat-hint", inputs: ["align", "id"] }, { kind: "directive", type: i3.MatError, selector: "mat-error, [matError]", inputs: ["id"] }, { kind: "component", type: i4.MatSelect, selector: "mat-select", inputs: ["disabled", "disableRipple", "tabIndex"], exportAs: ["matSelect"] }, { kind: "component", type: i5.MatOption, selector: "mat-option", exportAs: ["matOption"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.3", ngImport: i0, type: SelectFieldComponent, decorators: [{
            type: Component,
            args: [{ selector: 'tots-select-field', template: "<mat-form-field *ngIf=\"input\" [appearance]=\"getAppearance()\" class=\"{{getClases()}}\">\r\n    <mat-label *ngIf=\"field.label\"> {{ field.label }} </mat-label>\r\n\r\n    <mat-select [formControl]=\"input\" [placeholder]=\"getPlaceholder()\" [multiple]=\"isMultiple()\">\r\n        <mat-option *ngFor=\"let option of field.extra.options\" [value]=\"option.id\"> {{ option.title }} </mat-option>\r\n    </mat-select>\r\n\r\n    <mat-hint *ngIf=\"getCaption() != ''\" [align]=\"'end'\"> {{getCaption()}} </mat-hint>\r\n    <mat-error *ngIf=\"hasError()\">{{getMessageError()}}</mat-error>\r\n</mat-form-field>", styles: ["mat-form-field{width:100%}\n"] }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0LWZpZWxkLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3RvdHMvZm9ybS9zcmMvbGliL2ZpZWxkcy9zZWxlY3QtZmllbGQvc2VsZWN0LWZpZWxkLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3RvdHMvZm9ybS9zcmMvbGliL2ZpZWxkcy9zZWxlY3QtZmllbGQvc2VsZWN0LWZpZWxkLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUMsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sOEJBQThCLENBQUM7Ozs7Ozs7QUFPdEUsTUFBTSxPQUFPLG9CQUFxQixTQUFRLHNCQUFzQjtJQUM5RCxVQUFVO1FBQ1IsSUFBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUM7WUFBRSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQztTQUFFO1FBQ3BGLE9BQU8sRUFBRSxDQUFDO0lBQ1osQ0FBQztJQUVELFVBQVU7UUFDUixJQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBQztZQUFFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDO1NBQUU7UUFDdEYsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDOztpSEFUVSxvQkFBb0I7cUdBQXBCLG9CQUFvQixnRkNSakMscW1CQVNpQjsyRkRESixvQkFBb0I7a0JBTGhDLFNBQVM7K0JBQ0UsbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFRvdHNCYXNlRmllbGRDb21wb25lbnQgfSBmcm9tICcuLi90b3RzLWJhc2UtZmllbGQuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAndG90cy1zZWxlY3QtZmllbGQnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9zZWxlY3QtZmllbGQuY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL3NlbGVjdC1maWVsZC5jb21wb25lbnQuc2NzcyddXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTZWxlY3RGaWVsZENvbXBvbmVudCBleHRlbmRzIFRvdHNCYXNlRmllbGRDb21wb25lbnQge1xyXG4gIGdldENhcHRpb24oKSB7XHJcbiAgICBpZih0aGlzLmZpZWxkLmV4dHJhICYmIHRoaXMuZmllbGQuZXh0cmEuY2FwdGlvbil7IHJldHVybiB0aGlzLmZpZWxkLmV4dHJhLmNhcHRpb247IH1cclxuICAgIHJldHVybiAnJztcclxuICB9XHJcblxyXG4gIGlzTXVsdGlwbGUoKTogYm9vbGVhbiB7XHJcbiAgICBpZih0aGlzLmZpZWxkLmV4dHJhICYmIHRoaXMuZmllbGQuZXh0cmEubXVsdGlwbGUpeyByZXR1cm4gdGhpcy5maWVsZC5leHRyYS5tdWx0aXBsZTsgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxufVxyXG4iLCI8bWF0LWZvcm0tZmllbGQgKm5nSWY9XCJpbnB1dFwiIFthcHBlYXJhbmNlXT1cImdldEFwcGVhcmFuY2UoKVwiIGNsYXNzPVwie3tnZXRDbGFzZXMoKX19XCI+XHJcbiAgICA8bWF0LWxhYmVsICpuZ0lmPVwiZmllbGQubGFiZWxcIj4ge3sgZmllbGQubGFiZWwgfX0gPC9tYXQtbGFiZWw+XHJcblxyXG4gICAgPG1hdC1zZWxlY3QgW2Zvcm1Db250cm9sXT1cImlucHV0XCIgW3BsYWNlaG9sZGVyXT1cImdldFBsYWNlaG9sZGVyKClcIiBbbXVsdGlwbGVdPVwiaXNNdWx0aXBsZSgpXCI+XHJcbiAgICAgICAgPG1hdC1vcHRpb24gKm5nRm9yPVwibGV0IG9wdGlvbiBvZiBmaWVsZC5leHRyYS5vcHRpb25zXCIgW3ZhbHVlXT1cIm9wdGlvbi5pZFwiPiB7eyBvcHRpb24udGl0bGUgfX0gPC9tYXQtb3B0aW9uPlxyXG4gICAgPC9tYXQtc2VsZWN0PlxyXG5cclxuICAgIDxtYXQtaGludCAqbmdJZj1cImdldENhcHRpb24oKSAhPSAnJ1wiIFthbGlnbl09XCInZW5kJ1wiPiB7e2dldENhcHRpb24oKX19IDwvbWF0LWhpbnQ+XHJcbiAgICA8bWF0LWVycm9yICpuZ0lmPVwiaGFzRXJyb3IoKVwiPnt7Z2V0TWVzc2FnZUVycm9yKCl9fTwvbWF0LWVycm9yPlxyXG48L21hdC1mb3JtLWZpZWxkPiJdfQ==