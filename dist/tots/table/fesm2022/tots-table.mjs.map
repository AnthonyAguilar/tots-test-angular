{"version":3,"file":"tots-table.mjs","sources":["../../../../projects/tots/table/src/lib/entities/tots-column.ts","../../../../projects/tots/table/src/lib/entities/tots-table-config.ts","../../../../projects/tots/table/src/lib/entities/tots-table-default-config.ts","../../../../projects/tots/table/src/lib/entities/tots-action-table.ts","../../../../projects/tots/table/src/lib/entities/tots-table-api-config.ts","../../../../projects/tots/table/src/lib/entities/tots-column-option.ts","../../../../projects/tots/table/src/lib/entities/tots-more-menu-item.ts","../../../../projects/tots/table/src/lib/entities/tots-status-column-option.ts","../../../../projects/tots/table/src/lib/entities/tots-status-icon-column-option.ts","../../../../projects/tots/table/src/lib/helpers/tots-table-helper.ts","../../../../projects/tots/table/src/lib/columns/tots-base-column.component.ts","../../../../projects/tots/table/src/lib/columns/string-column/string-column.component.ts","../../../../projects/tots/table/src/lib/columns/string-column/string-column.component.html","../../../../projects/tots/table/src/lib/columns/more-menu-column/more-menu-column.component.ts","../../../../projects/tots/table/src/lib/columns/more-menu-column/more-menu-column.component.html","../../../../projects/tots/table/src/lib/columns/boolean-column/boolean-column.component.ts","../../../../projects/tots/table/src/lib/columns/boolean-column/boolean-column.component.html","../../../../projects/tots/table/src/lib/columns/two-string-column/two-string-column.component.ts","../../../../projects/tots/table/src/lib/columns/two-string-column/two-string-column.component.html","../../../../projects/tots/table/src/lib/columns/icon-button-column/icon-button-column.component.ts","../../../../projects/tots/table/src/lib/columns/icon-button-column/icon-button-column.component.html","../../../../projects/tots/table/src/lib/columns/checkbox-column/checkbox-column.component.ts","../../../../projects/tots/table/src/lib/columns/checkbox-column/checkbox-column.component.html","../../../../projects/tots/table/src/lib/columns/option-column/option-column.component.ts","../../../../projects/tots/table/src/lib/columns/option-column/option-column.component.html","../../../../projects/tots/table/src/lib/columns/user-column/user-column.component.ts","../../../../projects/tots/table/src/lib/columns/user-column/user-column.component.html","../../../../projects/tots/table/src/lib/columns/currency-column/currency-column.component.ts","../../../../projects/tots/table/src/lib/columns/currency-column/currency-column.component.html","../../../../projects/tots/table/src/lib/columns/status-column/status-column.component.ts","../../../../projects/tots/table/src/lib/columns/status-column/status-column.component.html","../../../../projects/tots/table/src/lib/columns/balance-currency-column/balance-currency-column.component.ts","../../../../projects/tots/table/src/lib/columns/balance-currency-column/balance-currency-column.component.html","../../../../projects/tots/table/src/lib/columns/status-icon-column/status-icon-column.component.ts","../../../../projects/tots/table/src/lib/columns/status-icon-column/status-icon-column.component.html","../../../../projects/tots/table/src/lib/columns/balance-currency-icon-column/balance-currency-icon-column.component.ts","../../../../projects/tots/table/src/lib/columns/balance-currency-icon-column/balance-currency-icon-column.component.html","../../../../projects/tots/table/src/lib/column-factories/tots-balance-column.ts","../../../../projects/tots/table/src/lib/column-factories/tots-balance-icon-column.ts","../../../../projects/tots/table/src/lib/column-factories/tots-boolean-column.ts","../../../../projects/tots/table/src/lib/column-factories/tots-checkbox-column.ts","../../../../projects/tots/table/src/lib/column-factories/tots-currency-column.ts","../../../../projects/tots/table/src/lib/column-factories/tots-icon-button-column.ts","../../../../projects/tots/table/src/lib/column-factories/tots-more-menu-column.ts","../../../../projects/tots/table/src/lib/column-factories/tots-option-column.ts","../../../../projects/tots/table/src/lib/column-factories/tots-status-column.ts","../../../../projects/tots/table/src/lib/column-factories/tots-status-icon-column.ts","../../../../projects/tots/table/src/lib/column-factories/tots-string-column.ts","../../../../projects/tots/table/src/lib/column-factories/tots-two-string-column.ts","../../../../projects/tots/table/src/lib/column-factories/tots-user-column.ts","../../../../projects/tots/table/src/lib/columns/base-print-column/base-print-column.component.ts","../../../../projects/tots/table/src/lib/columns/base-print-column/base-print-column.component.html","../../../../projects/tots/table/src/lib/components/loading-animation-renderer/loading-animation-renderer.component.ts","../../../../projects/tots/table/src/lib/components/loading-animation-renderer/loading-animation-renderer.component.html","../../../../projects/tots/table/src/lib/components/tots-table/tots-table.component.ts","../../../../projects/tots/table/src/lib/components/tots-table/tots-table.component.html","../../../../projects/tots/table/src/lib/components/tots-table-api/tots-table-api.component.ts","../../../../projects/tots/table/src/lib/components/tots-table-api/tots-table-api.component.html","../../../../projects/tots/table/src/lib/table.module.ts","../../../../projects/tots/table/src/public-api.ts","../../../../projects/tots/table/src/tots-table.ts"],"sourcesContent":["export class TotsColumn {\r\n    key : string;\r\n    component: any;\r\n    \r\n    field_key?: string|Array<string>;\r\n    title? : string;\r\n\r\n    extra?: any;\r\n    is_show? : boolean = true;\r\n    hasOrder? : boolean;\r\n    order?: 'asc'|'desc';\r\n\r\n    constructor(key:string, component:any, field_key?:string|string[], title?:string, hasOrder=false, order?:TotsColumnOrder) {\r\n        this.key = key;\r\n        this.field_key = field_key;\r\n        this.title = title;\r\n        this.component = component;\r\n        this.hasOrder = hasOrder;\r\n        this.order = order;\r\n    }\r\n}\r\n\r\nexport type TotsColumnOrder = \"asc\"|\"desc\";","import { TotsListResponse, TotsQuery } from \"@tots/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { TotsColumn } from \"./tots-column\";\r\n\r\nexport class TotsTableConfig {\r\n    id?: string = '';\r\n    columns: Array<TotsColumn> = [];\r\n    obs?: Observable<TotsListResponse<any>>;\r\n    classes?: string = '';\r\n}","import { Injectable, InjectionToken } from \"@angular/core\";\r\nimport { ThemePalette } from \"@angular/material/core\";\r\n\r\nexport const TOTS_TABLE_DEFAULT_CONFIG = new InjectionToken<TotsTableDefaultConfig>('tots_table_default_config');\r\n\r\n@Injectable()\r\nexport class TotsTableDefaultConfig {\r\n  /**\r\n   * Message shown when there are no entries in the table\r\n   */\r\n  messageNotFound? : string;\r\n\r\n  /**\r\n   * Replaces default mat spinner\r\n   */\r\n  loadingComponent? : any;\r\n\r\n  /**\r\n   * Applies to the default initial loading spinner and to the upper and/or lower progress bars\r\n   */\r\n  matColor? : ThemePalette;\r\n\r\n  /**\r\n   * @default false\r\n   */\r\n  upperPaginator? : boolean;\r\n  /**\r\n   * @default true\r\n   */\r\n  lowerPaginator? : boolean;\r\n\r\n  /**\r\n   * @default false\r\n   */\r\n  upperProgressBar? : boolean;\r\n  /**\r\n   * @default true\r\n   */\r\n  lowerProgressBar? : boolean;\r\n}","export class TotsActionTable {\r\n    key: string = '';\r\n    item?: any;\r\n}","import { TotsBaseHttpService, TotsQuery } from \"@tots/core\";\r\nimport { TotsColumn } from \"./tots-column\";\r\n\r\nexport class TotsTableApiConfig {\r\n    id?: string = '';\r\n    columns: Array<TotsColumn> = [];\r\n    service!: TotsBaseHttpService<any>;\r\n    query: TotsQuery = new TotsQuery();\r\n    classes?: string = '';\r\n}","export class TotsColumnOption {\r\n    value: number|string;\r\n    caption: string;\r\n\r\n    constructor(value:number|string, caption:string) {\r\n        this.value = value;\r\n        this.caption = caption;\r\n    }\r\n}","export class TotsMoreMenuItem {\r\n    icon: string|undefined;\r\n    title: string;\r\n    key: string;\r\n    class?: string;\r\n\r\n    constructor(icon:string|undefined, caption:string, action:string, cssClass?:string) {\r\n        this.icon = icon;\r\n        this.title = caption;\r\n        this.key = action;\r\n        this.class = cssClass;\r\n    }\r\n}","import { TotsColumnOption } from \"./tots-column-option\";\r\n\r\nexport class TotsStatusColumnOption extends TotsColumnOption {\r\n    background_color: string;\r\n    font_color: string;\r\n\r\n    constructor(value:number|string, caption:string, backgroundColor:string, fontColor:string) {\r\n        super(value, caption);\r\n        this.background_color = backgroundColor;\r\n        this.font_color = fontColor;\r\n    }\r\n}","import { TotsColumnOption } from \"./tots-column-option\";\r\n\r\nexport class TotsStatusIconColumnOption extends TotsColumnOption {\r\n    font_color: string;\r\n\r\n    constructor(value:number|string, icon:string, fontColor:string) {\r\n        super(value, icon);\r\n        this.font_color = fontColor;\r\n    }\r\n}","export class TotsTableHelper {\r\n    /**\r\n     * Obtiene el valor de un objeto a traves de la KEY\r\n     * @param item \r\n     * @param key \r\n     * @returns \r\n     */\r\n    static getItemValueByKey(item: any, key: string|Array<string>|undefined): any {\r\n        if(key == undefined||item == undefined){\r\n            return '';\r\n          }\r\n    \r\n          if (typeof key == 'string' && item[key] != undefined) {\r\n            return item[key];\r\n          }\r\n    \r\n          let valueFinal = item;\r\n          for (const keyObj of key!) {\r\n            if(valueFinal[keyObj] == undefined){\r\n              return '';\r\n            }\r\n            valueFinal = valueFinal[keyObj];\r\n          }\r\n          return valueFinal;\r\n    }\r\n}","import { Component, EventEmitter, Input, OnInit } from \"@angular/core\";\r\nimport { Subject } from \"rxjs\";\r\nimport { TotsActionTable } from \"../entities/tots-action-table\";\r\nimport { TotsColumn } from \"../entities/tots-column\";\r\nimport { TotsTableHelper } from \"../helpers/tots-table-helper\";\r\n\r\n@Component({\r\n    selector: 'tots-base-column',\r\n    template: ''\r\n})\r\nexport class TotsBaseColumnComponent{\r\n\r\n    @Input() column!: TotsColumn;\r\n    @Input() item: any;\r\n    @Input() onAction!: Subject<TotsActionTable>;\r\n    @Input() index?: number;\r\n\r\n    getItemValue(): any {\r\n        return TotsTableHelper.getItemValueByKey(this.item, this.column.field_key);\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { TotsBaseColumnComponent } from '../tots-base-column.component';\r\nimport { TotsTableHelper } from '../../helpers/tots-table-helper';\r\n\r\n@Component({\r\n  selector: 'tots-string-column',\r\n  templateUrl: './string-column.component.html',\r\n  styleUrls: ['./string-column.component.css']\r\n})\r\nexport class StringColumnComponent extends TotsBaseColumnComponent {\r\n\r\n  override getItemValue(): any {\r\n    let value = TotsTableHelper.getItemValueByKey(this.item, this.column.field_key);\r\n\r\n    if(this.column.extra && this.column.extra.cutSeparator){\r\n      return value.split(this.column.extra.cutSeparator)[0];\r\n    }\r\n\r\n    return value;\r\n  }\r\n\r\n  protected get prepend() : string|undefined {\r\n    return this.column.extra?.prepend;\r\n  }\r\n}\r\n","<span class=\"prefix\" *ngIf=\"prepend\"> {{ prepend }} </span>\r\n{{getItemValue()}}","import { Component } from '@angular/core';\r\nimport { TotsActionTable } from '../../entities/tots-action-table';\r\nimport { TotsBaseColumnComponent } from '../tots-base-column.component';\r\n\r\n@Component({\r\n  selector: 'tots-more-menu-column',\r\n  templateUrl: './more-menu-column.component.html',\r\n  styleUrls: ['./more-menu-column.component.scss']\r\n})\r\nexport class MoreMenuColumnComponent extends TotsBaseColumnComponent {\r\n\r\n  clickButton(itemAction: any, $event: UIEvent) {\r\n    this.onAction.next({ key: itemAction.key, item: this.item });\r\n    $event.preventDefault();\r\n    return false;\r\n  }\r\n}\r\n","<button mat-icon-button [matMenuTriggerFor]=\"actions\" (click)=\"$event.stopPropagation()\"><mat-icon>more_vert</mat-icon></button>\r\n<mat-menu #actions=\"matMenu\">\r\n    <button mat-menu-item *ngFor=\"let button of column.extra?.actions\" (click)=\"clickButton(button, $event)\" class=\"{{button.class}}\">\r\n        <mat-icon *ngIf=\"button.icon\">{{ button.icon }}</mat-icon> {{ button.title }}\r\n    </button>\r\n</mat-menu>","import { Component } from '@angular/core';\r\nimport { TotsBaseColumnComponent } from '../tots-base-column.component';\r\n\r\n@Component({\r\n  selector: 'tots-boolean-column',\r\n  templateUrl: './boolean-column.component.html',\r\n  styleUrls: ['./boolean-column.component.css']\r\n})\r\nexport class BooleanColumnComponent extends TotsBaseColumnComponent {\r\n\r\n}","<ng-container *ngIf=\"getItemValue() == true||getItemValue() == 1; else textNo\">YES</ng-container>\r\n<ng-template #textNo>NO</ng-template>","import { Component } from '@angular/core';\r\nimport { TotsTableHelper } from '../../helpers/tots-table-helper';\r\nimport { TotsBaseColumnComponent } from '../tots-base-column.component';\r\n\r\n@Component({\r\n  selector: 'tots-two-string-column',\r\n  templateUrl: './two-string-column.component.html',\r\n  styleUrls: ['./two-string-column.component.css']\r\n})\r\nexport class TwoStringColumnComponent extends TotsBaseColumnComponent {\r\n\r\n  getSubtitleValue(): any {\r\n    return TotsTableHelper.getItemValueByKey(this.item, this.column.extra.field_subtitle_key);\r\n  }\r\n}\r\n","<div class=\"first-line\"><strong>{{getItemValue()}}</strong></div>\r\n<div class=\"second-line\">{{getSubtitleValue()}}</div>","import { Component } from '@angular/core';\r\nimport { TotsBaseColumnComponent } from '../tots-base-column.component';\r\n\r\n@Component({\r\n  selector: 'tots-icon-button-column',\r\n  templateUrl: './icon-button-column.component.html',\r\n  styleUrls: ['./icon-button-column.component.css']\r\n})\r\nexport class IconButtonColumnComponent extends TotsBaseColumnComponent {\r\n\r\n  clickButton($event: UIEvent) {\r\n    this.onAction.next({ key: this.column.extra.action, item: this.item });\r\n    $event.stopPropagation();\r\n    return false;\r\n  }\r\n\r\n  getIconName() : string {\r\n    return this.column.extra.icon;\r\n  }\r\n\r\n  getButtonColor() : string {\r\n    return this.column.extra.matColor;\r\n  }\r\n\r\n  getClasses() : string {\r\n    return this.column.extra.class;\r\n  }\r\n}\r\n","<button mat-icon-button [color]=\"getButtonColor()\" [class]=\"getClasses()\" (click)=\"clickButton($event)\">\r\n    <mat-icon>{{getIconName()}}</mat-icon>\r\n</button>","import { Component } from '@angular/core';\r\nimport { TotsBaseColumnComponent } from '../tots-base-column.component';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\n\r\n@Component({\r\n  selector: 'tots-checkbox-column',\r\n  templateUrl: './checkbox-column.component.html',\r\n  styleUrls: ['./checkbox-column.component.css']\r\n})\r\nexport class CheckboxColumnComponent extends TotsBaseColumnComponent {\r\n\r\n  onChange(event: MatCheckboxChange) {\r\n    let key = 'select-item';\r\n    if(!event.checked){\r\n      key = 'unselect-item';\r\n    }\r\n    this.onAction.next({ key: key, item: this.item });\r\n  }\r\n}\r\n","<div class=\"tots-checkbox-column\">\r\n    <mat-checkbox [class]=\"this.column.extra?.class\" [color]=\"this.column.extra?.color\" (change)=\"onChange($event)\" (click)=\"$event.stopPropagation();\"></mat-checkbox>\r\n</div>","import { Component } from '@angular/core';\r\nimport { TotsTableHelper } from '../../helpers/tots-table-helper';\r\nimport { TotsBaseColumnComponent } from '../tots-base-column.component';\r\n\r\n@Component({\r\n  selector: 'tots-option-column',\r\n  templateUrl: './option-column.component.html',\r\n  styleUrls: ['./option-column.component.css']\r\n})\r\nexport class OptionColumnComponent extends TotsBaseColumnComponent {\r\n\r\n  override getItemValue(): any {\r\n    let value = TotsTableHelper.getItemValueByKey(this.item, this.column.field_key);\r\n    for (const item of this.column.extra.options) {\r\n      if(item[this.column.extra.field_rel_key] == value){\r\n        return item[this.column.extra.field_print_key];\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n}\r\n","{{getItemValue()}}","import { Component } from '@angular/core';\r\nimport { TotsTableHelper } from '../../helpers/tots-table-helper';\r\nimport { TotsBaseColumnComponent } from '../tots-base-column.component';\r\n\r\n@Component({\r\n  selector: 'tots-user-column',\r\n  templateUrl: './user-column.component.html',\r\n  styleUrls: ['./user-column.component.scss']\r\n})\r\nexport class UserColumnComponent extends TotsBaseColumnComponent {\r\n\r\n  getFirstname() {\r\n    if(this.column.extra?.field_firstname_key){\r\n      return TotsTableHelper.getItemValueByKey(this.item, this.column.extra.field_firstname_key);\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  getLastname() {\r\n    if(this.column.extra?.field_lastname_key){\r\n      return TotsTableHelper.getItemValueByKey(this.item, this.column.extra.field_lastname_key);\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  getFullname() {\r\n    return this.getFirstname() + ' ' + this.getLastname();\r\n  }\r\n\r\n  getPhoto() {\r\n    if(this.column.extra?.field_photo_key){\r\n      return TotsTableHelper.getItemValueByKey(this.item, this.column.extra.field_photo_key);\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  getSubtitle() {\r\n    if(this.column.extra?.field_subtitle_key){\r\n      return TotsTableHelper.getItemValueByKey(this.item, this.column.extra.field_subtitle_key);\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  isOnline() {\r\n    if(this.column.extra?.field_online_key){\r\n      return TotsTableHelper.getItemValueByKey(this.item, this.column.extra.field_online_key);\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","<div class=\"user-avatar-component\">\r\n    <div class=\"avatar\" *ngIf=\"getPhoto() != ''\">\r\n        <img mat-card-avatar [src]=\"getPhoto()\" alt=\"{{ getFullname() }}\" class=\"cover-image\" onerror=\"this.src='/assets/img/user-avatar-empty.svg';\">\r\n    </div>\r\n    <div class=\"texts\">\r\n        <div class=\"user\"> {{ getFullname() }} </div>\r\n        <div class=\"body-2\" *ngIf=\"getSubtitle() != ''\"> {{ getSubtitle() }} </div>\r\n    </div>\r\n    <div class=\"check\" *ngIf=\"column.extra?.field_is_online && isOnline()\"><mat-icon>check</mat-icon></div>\r\n</div>","import { Component } from '@angular/core';\r\nimport { TotsBaseColumnComponent } from '../tots-base-column.component';\r\n\r\n@Component({\r\n  selector: 'tots-currency-column',\r\n  templateUrl: './currency-column.component.html',\r\n  styleUrls: ['./currency-column.component.css']\r\n})\r\nexport class CurrencyColumnComponent extends TotsBaseColumnComponent {\r\n\r\n}\r\n","<span [ngClass]=\"{'tots-currency-column-positive': getItemValue() > 0, 'tots-currency-column-negative': getItemValue() < 0}\">{{getItemValue()|currency}}</span>","import { Component } from '@angular/core';\r\nimport { OptionColumnComponent } from '../option-column/option-column.component';\r\nimport { TotsTableHelper } from '../../helpers/tots-table-helper';\r\n\r\n@Component({\r\n  selector: 'tots-status-column',\r\n  templateUrl: './status-column.component.html',\r\n  styleUrls: ['./status-column.component.css']\r\n})\r\nexport class StatusColumnComponent extends OptionColumnComponent {\r\n\r\n  getBackgroundColor(): string {\r\n    let value = TotsTableHelper.getItemValueByKey(this.item, this.column.field_key);\r\n    for (const item of this.column.extra.options) {\r\n      if(item[this.column.extra.field_rel_key] == value && item['background_color'] != undefined){\r\n        return item['background_color'];\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getFontColor(): string {\r\n    let value = TotsTableHelper.getItemValueByKey(this.item, this.column.field_key);\r\n    for (const item of this.column.extra.options) {\r\n      if(item[this.column.extra.field_rel_key] == value && item['font_color'] != undefined){\r\n        return item['font_color'];\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n}\r\n","<span class=\"tots-status-column\" [ngStyle]=\"{'background-color': getBackgroundColor(), 'color': getFontColor()}\">{{getItemValue()}}</span>","import { Component } from '@angular/core';\r\nimport { TotsBaseColumnComponent } from '../tots-base-column.component';\r\nimport { TotsTableHelper } from '../../helpers/tots-table-helper';\r\n\r\n@Component({\r\n  selector: 'tots-balance-currency-column',\r\n  templateUrl: './balance-currency-column.component.html',\r\n  styleUrls: ['./balance-currency-column.component.css']\r\n})\r\nexport class BalanceCurrencyColumnComponent extends TotsBaseColumnComponent {\r\n\r\n  getBalance() {\r\n    return this.getDebit() - this.getCredit();\r\n  }\r\n\r\n  getDebit(): any {\r\n    return TotsTableHelper.getItemValueByKey(this.item, this.column.extra.field_key_debit);\r\n  }\r\n\r\n  getCredit(): any {\r\n    return TotsTableHelper.getItemValueByKey(this.item, this.column.extra.field_key_credit);\r\n  }\r\n}\r\n","<span [ngClass]=\"{'tots-balance-column-positive': getBalance() > 0, 'tots-balance-column-negative': getBalance() < 0}\">{{getBalance()|currency}}</span>","import { Component } from '@angular/core';\r\nimport { OptionColumnComponent } from '../option-column/option-column.component';\r\nimport { TotsTableHelper } from '../../helpers/tots-table-helper';\r\n\r\n@Component({\r\n  selector: 'tots-status-icon-column',\r\n  templateUrl: './status-icon-column.component.html',\r\n  styleUrls: ['./status-icon-column.component.css']\r\n})\r\nexport class StatusIconColumnComponent extends OptionColumnComponent {\r\n\r\n  getFontColor(): string {\r\n    let value = TotsTableHelper.getItemValueByKey(this.item, this.column.field_key);\r\n    for (const item of this.column.extra.options) {\r\n      if(item[this.column.extra.field_rel_key] == value && item['font_color'] != undefined){\r\n        return item['font_color'];\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n}\r\n","<span class=\"tots-status-icon-column\" [ngStyle]=\"{'color': getFontColor()}\"><mat-icon>{{getItemValue()}}</mat-icon></span>","import { Component } from '@angular/core';\r\nimport { BalanceCurrencyColumnComponent } from '../balance-currency-column/balance-currency-column.component';\r\n\r\n@Component({\r\n  selector: 'tots-balance-currency-icon-column',\r\n  templateUrl: './balance-currency-icon-column.component.html',\r\n  styleUrls: ['./balance-currency-icon-column.component.css']\r\n})\r\nexport class BalanceCurrencyIconColumnComponent extends BalanceCurrencyColumnComponent {\r\n\r\n  getIconPositive(): any {\r\n    return this.column.extra.icon_positive\r\n  }\r\n\r\n  getIconNegative(): any {\r\n    return this.column.extra.icon_negative;\r\n  }\r\n\r\n  getIconNeutral(): any {\r\n    return this.column.extra.icon_neutral;\r\n  }\r\n}\r\n","<span [ngClass]=\"{'tots-balance-column-positive': getBalance() > 0, 'tots-balance-column-negative': getBalance() < 0}\">\r\n    <mat-icon *ngIf=\"getBalance() > 0\">{{getIconPositive()}}</mat-icon>\r\n    <mat-icon *ngIf=\"getBalance() < 0\">{{getIconNegative()}}</mat-icon>\r\n    <mat-icon *ngIf=\"getBalance() == 0\">{{getIconNeutral()}}</mat-icon>\r\n</span>","import { BalanceCurrencyColumnComponent } from \"../columns/balance-currency-column/balance-currency-column.component\";\r\nimport { TotsColumn, TotsColumnOrder } from \"../entities/tots-column\";\r\n\r\nexport class TotsBalanceColumn extends TotsColumn {\r\n\tconstructor(id:string, activeAssetFieldKey:string|string[], passiveAssetFieldKey:string|string[], title?:string, hasOrder?:boolean, order?:TotsColumnOrder) {\r\n        super(id, BalanceCurrencyColumnComponent, undefined, title, hasOrder, order);\r\n        this.extra = {\r\n            field_key_credit: activeAssetFieldKey,\r\n            field_key_debit: passiveAssetFieldKey\r\n        }\r\n    }\r\n}","import { BalanceCurrencyIconColumnComponent } from \"../columns/balance-currency-icon-column/balance-currency-icon-column.component\";\r\nimport { TotsColumn, TotsColumnOrder } from \"../entities/tots-column\";\r\n\r\nexport class TotsBalanceIconColumn extends TotsColumn {\r\n\tconstructor(id:string, activeAssetFieldKey:string|string[], passiveAssetFieldKey:string|string[], neutralIcon:string, positiveIcon:string, negativeIcon:string, title?:string, hasOrder?:boolean, order?:TotsColumnOrder) {\r\n        super(id, BalanceCurrencyIconColumnComponent, undefined, title, hasOrder, order);\r\n        this.extra = {\r\n            field_key_credit: activeAssetFieldKey,\r\n            field_key_debit: passiveAssetFieldKey,\r\n            icon_neutral: neutralIcon,\r\n            icon_positive: positiveIcon,\r\n            icon_negative: negativeIcon\r\n        }\r\n    }\r\n}","import { BooleanColumnComponent } from \"../columns/boolean-column/boolean-column.component\";\r\nimport { TotsColumn, TotsColumnOrder } from \"../entities/tots-column\";\r\n\r\nexport class TotsBooleanColumn extends TotsColumn {\r\n\tconstructor(id:string, fieldKey:string|string[], title?:string, hasOrder?:boolean, order?:TotsColumnOrder) {\r\n        super(id, BooleanColumnComponent, fieldKey, title, hasOrder, order);\r\n    }\r\n}","import { ThemePalette } from \"@angular/material/core\";\r\nimport { CheckboxColumnComponent } from \"../columns/checkbox-column/checkbox-column.component\";\r\nimport { TotsColumn, TotsColumnOrder } from \"../entities/tots-column\";\r\n\r\nexport class TotsCheckboxColumn extends TotsColumn {\r\n\tconstructor(id:string, fieldKey?:string|string[], title?:string, color?:ThemePalette, cssClass?:string, hasOrder?:boolean, order?:TotsColumnOrder, stickyEnd?:true) {\r\n        super(id, CheckboxColumnComponent, fieldKey, title, hasOrder, order);\r\n        this.extra = {\r\n            stickyEnd: stickyEnd,\r\n            color: color,\r\n            class: cssClass\r\n        }\r\n    }\r\n}","import { CurrencyColumnComponent } from \"../columns/currency-column/currency-column.component\";\r\nimport { TotsColumn, TotsColumnOrder } from \"../entities/tots-column\";\r\n\r\nexport class TotsCurrencyColumn extends TotsColumn {\r\n\tconstructor(id:string, fieldKey:string|string[], title?:string, hasOrder?:boolean, order?:TotsColumnOrder) {\r\n        super(id, CurrencyColumnComponent, fieldKey, title, hasOrder, order);\r\n    }\r\n}","import { ThemePalette } from \"@angular/material/core\";\r\nimport { IconButtonColumnComponent } from \"../columns/icon-button-column/icon-button-column.component\";\r\nimport { TotsColumn } from \"../entities/tots-column\";\r\n\r\nexport class TotsIconButtonColumn extends TotsColumn {\r\n\tconstructor(id:string, icon:string, action:string, color?:ThemePalette, title?:string, cssClass?:string, stickyEnd?:boolean) {\r\n        super(id, IconButtonColumnComponent, undefined, title);\r\n        this.extra = {\r\n            icon: icon,\r\n            matColor: color,\r\n            action: action,\r\n            class: cssClass,\r\n            stickyEnd: stickyEnd\r\n        }\r\n    }\r\n}","import { MoreMenuColumnComponent } from \"../columns/more-menu-column/more-menu-column.component\";\r\nimport { TotsColumn } from \"../entities/tots-column\";\r\nimport { TotsMoreMenuItem } from \"../entities/tots-more-menu-item\";\r\n\r\nexport class TotsMoreMenuColumn extends TotsColumn {\r\n\tconstructor(id:string, items:TotsMoreMenuItem[], title?:string, stickyEnd?:boolean) {\r\n        super(id, MoreMenuColumnComponent, undefined, title);\r\n        this.extra = {\r\n            stickyEnd: stickyEnd,\r\n            actions: items\r\n        }\r\n    }\r\n}","import { OptionColumnComponent } from \"../columns/option-column/option-column.component\";\r\nimport { TotsColumn, TotsColumnOrder } from \"../entities/tots-column\";\r\nimport { TotsColumnOption } from \"../entities/tots-column-option\";\r\n\r\nexport class TotsOptionColumn extends TotsColumn {\r\n\tconstructor(id:string, fieldKey:string|string[], options:TotsColumnOption[], title?:string, hasOrder?:boolean, order?:TotsColumnOrder) {\r\n        super(id, OptionColumnComponent, fieldKey, title, hasOrder, order);\r\n        this.extra = {\r\n            options: options,\r\n            field_rel_key: \"value\",\r\n            field_print_key: \"caption\"\r\n        }\r\n    }\r\n}","import { StatusColumnComponent } from \"../columns/status-column/status-column.component\";\r\nimport { TotsColumn, TotsColumnOrder } from \"../entities/tots-column\";\r\nimport { TotsStatusColumnOption } from \"../entities/tots-status-column-option\";\r\n\r\nexport class TotsStatusColumn extends TotsColumn {\r\n\tconstructor(id:string, fieldKey:string|string[], options:TotsStatusColumnOption[], title?:string, hasOrder?:boolean, order?:TotsColumnOrder) {\r\n        super(id, StatusColumnComponent, fieldKey, title, hasOrder, order);\r\n        this.extra = {\r\n            options: options,\r\n            field_rel_key: \"value\",\r\n            field_print_key: \"caption\"\r\n        }\r\n    }\r\n}","import { StatusIconColumnComponent } from \"../columns/status-icon-column/status-icon-column.component\";\r\nimport { TotsColumn, TotsColumnOrder } from \"../entities/tots-column\";\r\nimport { TotsStatusIconColumnOption } from \"../entities/tots-status-icon-column-option\";\r\n\r\nexport class TotsStatusIconColumn extends TotsColumn {\r\n\tconstructor(id:string, fieldKey:string|string[], options:TotsStatusIconColumnOption[], title?:string, hasOrder?:boolean, order?:TotsColumnOrder) {\r\n        super(id, StatusIconColumnComponent, fieldKey, title, hasOrder, order);\r\n        this.extra = {\r\n            options: options,\r\n            field_rel_key: \"value\",\r\n            field_print_key: \"caption\"\r\n        }\r\n    }\r\n}","import { StringColumnComponent } from \"../columns/string-column/string-column.component\";\r\nimport { TotsColumn, TotsColumnOrder } from \"../entities/tots-column\";\r\n\r\nexport class TotsStringColumn extends TotsColumn {\r\n\tconstructor(id:string, fieldKey:string|string[], title?:string, hasOrder?:boolean, order?:TotsColumnOrder, prepend?:string) {\r\n        super(id, StringColumnComponent, fieldKey, title, hasOrder, order);\r\n        this.extra = {\r\n            prepend: prepend\r\n        }\r\n    }\r\n}","import { TwoStringColumnComponent } from \"../columns/two-string-column/two-string-column.component\";\r\nimport { TotsColumn, TotsColumnOrder } from \"../entities/tots-column\";\r\n\r\nexport class TotsTwoStringColumn extends TotsColumn {\r\n\tconstructor(id:string, fieldKey:string|string[], secondFieldKey:string|string[], title?:string, hasOrder?:boolean, order?:TotsColumnOrder) {\r\n        super(id, TwoStringColumnComponent, fieldKey, title, hasOrder, order);\r\n        this.extra = {\r\n            field_subtitle_key: secondFieldKey\r\n        }\r\n    }\r\n}","import { UserColumnComponent } from \"../columns/user-column/user-column.component\";\r\nimport { TotsColumn, TotsColumnOrder } from \"../entities/tots-column\";\r\n\r\nexport class TotsUserColumn extends TotsColumn {\r\n    // first name, last name y photo obligatorios. Si no hay variable de foto, que usen two string column\r\n\tconstructor(id:string, firstNameFieldKey:string|string[], lastNameFieldKey:string|string[], photoFieldKey:string|string[], secondLineFieldKey?:string|string[], title?:string, onlineFieldKey?:string, hasOrder?:boolean, order?:TotsColumnOrder) {\r\n        super(id, UserColumnComponent, undefined, title, hasOrder, order);\r\n        this.extra = {\r\n            field_firstname_key: firstNameFieldKey,\r\n            field_lastname_key: lastNameFieldKey,\r\n            field_photo_key: photoFieldKey,\r\n            field_subtitle_key: secondLineFieldKey,\r\n            field_online_key: onlineFieldKey\r\n        }\r\n    }\r\n}","import { Component, Input, ViewContainerRef } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { TotsActionTable } from '../../entities/tots-action-table';\r\nimport { TotsColumn } from '../../entities/tots-column';\r\n\r\n@Component({\r\n  selector: 'tots-base-print-column',\r\n  templateUrl: './base-print-column.component.html',\r\n  styleUrls: ['./base-print-column.component.css']\r\n})\r\nexport class BasePrintColumnComponent {\r\n\r\n  @Input() column!: TotsColumn;\r\n  @Input() item: any;\r\n  @Input() onAction!: Subject<TotsActionTable>;\r\n  @Input() index?: number;\r\n\r\n  constructor(\r\n    protected viewContainerRef: ViewContainerRef\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const view = this.viewContainerRef.createComponent(this.column.component);\r\n    (<any>view.instance).column = this.column;\r\n    (<any>view.instance).item = this.item;\r\n    (<any>view.instance).onAction = this.onAction;\r\n    (<any>view.instance).index = this.index;\r\n  }\r\n}\r\n","<div #contentColumn></div>","import { Component, ComponentRef, Inject, OnDestroy, ViewChild, ViewContainerRef } from '@angular/core';\r\nimport { TOTS_TABLE_DEFAULT_CONFIG, TotsTableDefaultConfig } from '../../entities/tots-table-default-config';\r\nimport { MatProgressSpinner } from '@angular/material/progress-spinner';\r\n\r\n@Component({\r\n  selector: 'tots-loading-animation-renderer',\r\n  templateUrl: './loading-animation-renderer.component.html',\r\n  styleUrls: ['./loading-animation-renderer.component.scss']\r\n})\r\nexport class LoadingAnimationRendererComponent implements OnDestroy {\r\n\r\n\t@ViewChild('loadingComponentContainer', { read: ViewContainerRef }) loadingComponentContainer! : ViewContainerRef;\r\n  loadingComponent! : ComponentRef<any>;\r\n\r\n  //#region Setup\r\n  constructor(\r\n    @Inject(TOTS_TABLE_DEFAULT_CONFIG) private totsTableDefaultConfig : TotsTableDefaultConfig,\r\n\t\tprivate viewContainerRef: ViewContainerRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.setLoader();\r\n  }\r\n  ngOnDestroy() {\r\n    this.loadingComponentContainer?.clear();\r\n  }\r\n\r\n  private setLoader() {\r\n    if (this.totsTableDefaultConfig.loadingComponent) {\r\n      this.loadingComponent = this.viewContainerRef.createComponent(this.totsTableDefaultConfig.loadingComponent);\r\n    } else {\r\n      this.loadingComponent = this.viewContainerRef.createComponent(MatProgressSpinner);\r\n      this.loadingComponent.instance.diameter = 50;\r\n      this.loadingComponent.instance.mode = \"indeterminate\";\r\n      this.loadingComponent.instance.color = this.totsTableDefaultConfig.matColor;\r\n    }\r\n  }\r\n  //#endregion\r\n}","<ng-container #loadingComponentContainer></ng-container>","import { ChangeDetectorRef, Component, EventEmitter, Inject, Input, OnInit, Output } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { TotsListResponse } from '@tots/core';\r\nimport { Subject, tap } from 'rxjs';\r\nimport { TotsActionTable } from '../../entities/tots-action-table';\r\nimport { TotsColumn } from '../../entities/tots-column';\r\nimport { TotsTableConfig } from '../../entities/tots-table-config';\r\nimport { TOTS_TABLE_DEFAULT_CONFIG, TotsTableDefaultConfig } from '../../entities/tots-table-default-config';\r\nimport { ThemePalette } from '@angular/material/core';\r\n\r\n@Component({\r\n  selector: 'tots-table',\r\n  templateUrl: './tots-table.component.html',\r\n  styleUrls: ['./tots-table.component.scss']\r\n})\r\nexport class TotsTableComponent implements OnInit {\r\n\r\n  @Input() config = new TotsTableConfig();\r\n  @Input() pageIndex: number = 0;\r\n  @Input() pageSize: number = 50;\r\n  @Input() hasPagination: boolean = true;\r\n  @Input() messageNotFound! : string;\r\n\r\n  @Output() onAction = new EventEmitter<TotsActionTable>();\r\n  privateActions = new Subject<TotsActionTable>();\r\n\r\n  dataItems?: TotsListResponse<any>;\r\n  displayColumns: Array<String> = [];\r\n\r\n  isLoading = true;\r\n  firstLoad = true;\r\n  matColor : ThemePalette;\r\n\r\n  upperPaginator : boolean;\r\n  lowerPaginator : boolean;\r\n  upperProgressBar : boolean;\r\n  lowerProgressBar : boolean;\r\n\r\n  //#region Setup\r\n  constructor(\r\n    protected changeDectetor: ChangeDetectorRef,\r\n    @Inject(TOTS_TABLE_DEFAULT_CONFIG) private totsTableDefaultConfig : TotsTableDefaultConfig,\r\n  ) {\r\n    this.messageNotFound = this.totsTableDefaultConfig.messageNotFound ? this.totsTableDefaultConfig.messageNotFound : \"No results found, please try with other search terms\";\r\n    this.matColor = this.totsTableDefaultConfig.matColor != undefined ? this.totsTableDefaultConfig.matColor : \"primary\";\r\n    this.upperPaginator = this.totsTableDefaultConfig.upperPaginator != undefined ? this.totsTableDefaultConfig.upperPaginator : false;\r\n    this.lowerPaginator = this.totsTableDefaultConfig.lowerPaginator != undefined ? this.totsTableDefaultConfig.lowerPaginator : true;\r\n    this.upperProgressBar = this.totsTableDefaultConfig.upperProgressBar != undefined ? this.totsTableDefaultConfig.upperProgressBar : false;\r\n    this.lowerProgressBar = this.totsTableDefaultConfig.lowerProgressBar != undefined ? this.totsTableDefaultConfig.lowerProgressBar : true;\r\n  }\r\n\r\n  //#region Lifetime cycles\r\n  ngOnInit(): void {\r\n    this.loadConfig();\r\n    this.loadItems();      \r\n  }\r\n  //#endregion\r\n\r\n  loadConfig() {\r\n    this.loadColumns();\r\n    this.privateActions.subscribe(action => {\r\n      this.onAction.emit(action);\r\n    });\r\n  }\r\n  loadItems() {\r\n    this.isLoading = true;\r\n    return this.config.obs?.pipe(\r\n      tap(res => {\r\n        this.dataItems = res;\r\n        this.onAction.emit({ key: 'loaded-items', item: res })\r\n      })\r\n    ).subscribe(()=> this.stopLoading());\r\n  }\r\n\r\n  private stopLoading() {\r\n    this.isLoading = false;\r\n    this.firstLoad = false;\r\n  }\r\n  //#endregion\r\n\r\n  onClickOrder(column: TotsColumn) {\r\n    if(!column.hasOrder){ return; }\r\n    let orderColumn = column.order;\r\n    this.config.columns.forEach(c => c.order = undefined);\r\n    column.order = orderColumn == 'asc' ? 'desc' : 'asc';\r\n    this.onAction.emit({ key: 'click-order', item: column });\r\n  }\r\n\r\n  onClickRow(item: any) {\r\n    this.onAction.emit({ key: 'click-row', item: item });\r\n  }\r\n\r\n  onPageChange(event: PageEvent) {\r\n    this.onAction.emit({ key: 'page-change', item: event });\r\n  }\r\n\r\n  loadColumns() {\r\n    this.displayColumns = this.config.columns.filter(c => c.is_show || c.is_show == undefined).map(c => c.key);\r\n  }\r\n\r\n  getDataItems(): TotsListResponse<any> | undefined {\r\n    return this.dataItems;\r\n  }\r\n\r\n  refreshDataItems(newData: TotsListResponse<any> | undefined) {\r\n    this.dataItems = newData;\r\n  }\r\n\r\n  detectChanges() {\r\n    this.changeDectetor.detectChanges();\r\n  }\r\n}\r\n","<div class=\"tots-table-container {{config.classes}}\">\r\n\r\n    <!-- #region Lower paginator -->\r\n    <ng-container *ngIf=\"upperPaginator && dataItems && dataItems.data.length > 0 && hasPagination\">\r\n        <mat-paginator [pageIndex]=\"pageIndex-1\" [length]=\"dataItems!.total\" [pageSize]=\"pageSize\" (page)=\"onPageChange($event)\"></mat-paginator>\r\n    </ng-container>\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Lower progress bar -->\r\n    <ng-container *ngIf=\"upperProgressBar\">\r\n        <div class=\"tots-table-bar-loading upper\">\r\n            <mat-progress-bar *ngIf=\"isLoading && !firstLoad\" [mode]=\"'indeterminate'\" [color]=\"matColor\"></mat-progress-bar>\r\n        </div>\r\n    </ng-container>\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Table -->\r\n    <table mat-table [dataSource]=\"dataItems != undefined ? dataItems!.data : []\">\r\n\r\n        <ng-container *ngFor=\"let column of config.columns\" [matColumnDef]=\"column.key\" [stickyEnd]=\"column.extra?.stickyEnd ?? false\">\r\n            <!-- TH-->\r\n            <th mat-header-cell *matHeaderCellDef [ngClass]=\"{'tots-tr-has-order': column.hasOrder}\" (click)=\"onClickOrder(column)\">\r\n                {{ column.title }}\r\n                <mat-icon [ngClass]=\"{'sort_active': column.order == 'asc'}\">arrow_drop_up</mat-icon>\r\n                <mat-icon [ngClass]=\"{'sort_active': column.order == 'desc'}\">arrow_drop_down</mat-icon>\r\n            </th>\r\n            <!-- TD -->\r\n            <td mat-cell *matCellDef=\"let item; let index = index;\" [ngStyle]=\"{'width': column.extra?.width ? column.extra.width : 'auto'}\"><tots-base-print-column [column]=\"column\" [item]=\"item\" [index]=\"index\" [onAction]=\"privateActions\"></tots-base-print-column></td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayColumns;\" (click)=\"onClickRow(row)\" [class]=\"row.classCustom\" [ngClass]=\"{'tots-cell-selected': row.isSelected}\"></tr>\r\n\r\n        <!-- Row shown when there is no matching data. -->\r\n        <ng-container *ngIf=\"!isLoading\">\r\n            <tr class=\"tots-table-not-data\" *matNoDataRow><td class=\"mat-cell\" [colSpan]=\"config.columns.length\">{{ messageNotFound }}</td></tr>\r\n        </ng-container>\r\n    </table>\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region First loading animation -->\r\n    <div *ngIf=\"isLoading && firstLoad\" class=\"tots-table-loading\">\r\n        <tots-loading-animation-renderer></tots-loading-animation-renderer>\r\n    </div>\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Lower progress bar -->\r\n    <ng-container *ngIf=\"lowerProgressBar\">\r\n        <div class=\"tots-table-bar-loading lower\">\r\n            <mat-progress-bar *ngIf=\"isLoading && !firstLoad\" [mode]=\"'indeterminate'\" [color]=\"matColor\"></mat-progress-bar>\r\n        </div>\r\n    </ng-container>\r\n    <!-- #endregion -->\r\n\r\n    <!-- #region Lower paginator -->\r\n    <ng-container *ngIf=\"lowerPaginator && dataItems && dataItems.data.length > 0 && hasPagination\">\r\n        <mat-paginator [pageIndex]=\"pageIndex-1\" [length]=\"dataItems!.total\" [pageSize]=\"pageSize\" (page)=\"onPageChange($event)\"></mat-paginator>\r\n    </ng-container>\r\n    <!-- #endregion -->\r\n\r\n</div>","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { TotsListResponse } from '@tots/core';\r\nimport { Observable } from 'rxjs';\r\nimport { TotsActionTable } from '../../entities/tots-action-table';\r\nimport { TotsTableApiConfig } from '../../entities/tots-table-api-config';\r\nimport { TotsTableConfig } from '../../entities/tots-table-config';\r\nimport { TotsTableComponent } from '../tots-table/tots-table.component';\r\n\r\n@Component({\r\n  selector: 'tots-table-api',\r\n  templateUrl: './tots-table-api.component.html',\r\n  styleUrls: ['./tots-table-api.component.scss']\r\n})\r\nexport class TotsTableApiComponent implements OnInit {\r\n  \r\n  @ViewChild('tableComp') tableComp!: TotsTableComponent;\r\n\r\n  @Input() config = new TotsTableApiConfig();\r\n  @Input() hasPagination: boolean = true;\r\n  @Input() isPaginationStartIndexInZero: boolean = false;\r\n\r\n  @Output() onAction = new EventEmitter<TotsActionTable>();\r\n\r\n  configTable = new TotsTableConfig();\r\n\r\n  ngOnInit(): void {\r\n    this.loadConfig();\r\n  }\r\n\r\n  onTableAction(action: TotsActionTable) {\r\n    if(action.key == 'page-change'){\r\n      this.config.query.per_page = action.item.pageSize;\r\n      if(this.isPaginationStartIndexInZero){\r\n        this.config.query.page = action.item.pageIndex;\r\n      } else {\r\n        this.config.query.page = action.item.pageIndex + 1;\r\n      }\r\n      this.configTable.obs = this.config.service.list(this.config.query);\r\n    }\r\n\r\n    this.onAction.emit(action);\r\n  }\r\n\r\n  loadConfig() {\r\n    this.configTable.id = this.config.id;\r\n    this.configTable.columns = this.config.columns;\r\n    this.configTable.obs = this.config.service.list(this.config.query);\r\n    this.configTable.classes = this.config.classes;\r\n  }\r\n\r\n  refreshQueryAndLoadItems() {\r\n    this.configTable.obs = this.config.service.list(this.config.query);\r\n    return this.loadItems();\r\n  }\r\n\r\n  loadItems() {\r\n    return this.tableComp.loadItems();\r\n  }\r\n\r\n  getDataItems(): TotsListResponse<any> | undefined {\r\n    return this.tableComp.getDataItems();\r\n  }\r\n\r\n  setObs(obs: Observable<TotsListResponse<any>>) {\r\n    this.configTable.obs = obs;\r\n  }\r\n}\r\n","<tots-table #tableComp [config]=\"configTable\" [pageIndex]=\"config.query.page\" [pageSize]=\"config.query.per_page\" (onAction)=\"onTableAction($event)\" [hasPagination]=\"hasPagination\"></tots-table>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n/** Angular Material */\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MAT_PAGINATOR_DEFAULT_OPTIONS, MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n/** Components */\r\nimport { TotsTableComponent } from './components/tots-table/tots-table.component';\r\nimport { TotsTableApiComponent } from './components/tots-table-api/tots-table-api.component';\r\n\r\n/** Columns */\r\nimport { BasePrintColumnComponent } from './columns/base-print-column/base-print-column.component';\r\nimport { StringColumnComponent } from './columns/string-column/string-column.component';\r\nimport { MoreMenuColumnComponent } from './columns/more-menu-column/more-menu-column.component';\r\nimport { BooleanColumnComponent } from './columns/boolean-column/boolean-column.component';\r\nimport { TwoStringColumnComponent } from './columns/two-string-column/two-string-column.component';\r\nimport { IconButtonColumnComponent } from './columns/icon-button-column/icon-button-column.component';\r\nimport { CheckboxColumnComponent } from './columns/checkbox-column/checkbox-column.component';\r\nimport { OptionColumnComponent } from './columns/option-column/option-column.component';\r\nimport { UserColumnComponent } from './columns/user-column/user-column.component';\r\nimport { CurrencyColumnComponent } from './columns/currency-column/currency-column.component';\r\nimport { StatusColumnComponent } from './columns/status-column/status-column.component';\r\nimport { BalanceCurrencyColumnComponent } from './columns/balance-currency-column/balance-currency-column.component';\r\nimport { StatusIconColumnComponent } from './columns/status-icon-column/status-icon-column.component';\r\nimport { BalanceCurrencyIconColumnComponent } from './columns/balance-currency-icon-column/balance-currency-icon-column.component';\r\nimport { TOTS_TABLE_DEFAULT_CONFIG, TotsTableDefaultConfig } from './entities/tots-table-default-config';\r\nimport { LoadingAnimationRendererComponent } from './components/loading-animation-renderer/loading-animation-renderer.component';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TotsTableComponent,\r\n    BasePrintColumnComponent,\r\n    StringColumnComponent,\r\n    TotsTableApiComponent,\r\n    MoreMenuColumnComponent,\r\n    BooleanColumnComponent,\r\n    TwoStringColumnComponent,\r\n    IconButtonColumnComponent,\r\n    CheckboxColumnComponent,\r\n    OptionColumnComponent,\r\n    UserColumnComponent,\r\n    CurrencyColumnComponent,\r\n    StatusColumnComponent,\r\n    BalanceCurrencyColumnComponent,\r\n    StatusIconColumnComponent,\r\n    BalanceCurrencyIconColumnComponent,\r\n    LoadingAnimationRendererComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    // Angular Material\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatCheckboxModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule\r\n  ],\r\n  exports: [\r\n    TotsTableComponent,\r\n    TotsTableApiComponent\r\n  ],\r\n  providers: [\r\n    {\r\n\t\t\tprovide: MAT_PAGINATOR_DEFAULT_OPTIONS,\r\n\t\t\tuseValue: {\r\n\t\t\t\tpageSizeOptions: [5, 10, 25, 50, 100]\r\n\t\t\t}\r\n\t\t},\r\n    {\r\n      provide: TOTS_TABLE_DEFAULT_CONFIG,\r\n      useClass: TotsTableDefaultConfig\r\n    }\r\n  ]\r\n})\r\nexport class TotsTableModule { }\r\n","/*\r\n * Public API Surface of table\r\n */\r\n\r\n/**\r\n * Entities\r\n */\r\nexport * from './lib/entities/tots-column';\r\nexport * from './lib/entities/tots-table-config';\r\nexport * from './lib/entities/tots-table-default-config';\r\nexport * from './lib/entities/tots-action-table';\r\nexport * from './lib/entities/tots-table-api-config';\r\nexport * from './lib/entities/tots-column-option';\r\nexport * from './lib/entities/tots-more-menu-item';\r\nexport * from './lib/entities/tots-status-column-option';\r\nexport * from './lib/entities/tots-status-icon-column-option';\r\n\r\n/**\r\n * Helpers\r\n */\r\nexport * from './lib/helpers/tots-table-helper';\r\n\r\n/**\r\n * Columns\r\n */\r\nexport * from './lib/columns/tots-base-column.component';\r\nexport * from './lib/columns/string-column/string-column.component';\r\nexport * from './lib/columns/more-menu-column/more-menu-column.component';\r\nexport * from './lib/columns/boolean-column/boolean-column.component';\r\nexport * from './lib/columns/two-string-column/two-string-column.component';\r\nexport * from './lib/columns/icon-button-column/icon-button-column.component';\r\nexport * from './lib/columns/checkbox-column/checkbox-column.component';\r\nexport * from './lib/columns/option-column/option-column.component';\r\nexport * from './lib/columns/user-column/user-column.component';\r\nexport * from './lib/columns/currency-column/currency-column.component';\r\nexport * from './lib/columns/status-column/status-column.component';\r\nexport * from './lib/columns/balance-currency-column/balance-currency-column.component';\r\nexport * from './lib/columns/status-icon-column/status-icon-column.component';\r\nexport * from './lib/columns/balance-currency-icon-column/balance-currency-icon-column.component';\r\n\r\n/**\r\n * Factories\r\n */\r\nexport * from './lib/column-factories/tots-balance-column';\r\nexport * from './lib/column-factories/tots-balance-icon-column';\r\nexport * from './lib/column-factories/tots-boolean-column';\r\nexport * from './lib/column-factories/tots-checkbox-column';\r\nexport * from './lib/column-factories/tots-currency-column';\r\nexport * from './lib/column-factories/tots-icon-button-column';\r\nexport * from './lib/column-factories/tots-more-menu-column';\r\nexport * from './lib/column-factories/tots-option-column';\r\nexport * from './lib/column-factories/tots-status-column';\r\nexport * from './lib/column-factories/tots-status-icon-column';\r\nexport * from './lib/column-factories/tots-string-column';\r\nexport * from './lib/column-factories/tots-two-string-column';\r\nexport * from './lib/column-factories/tots-user-column';\r\n\r\n/**\r\n * Components\r\n */\r\nexport * from './lib/components/tots-table/tots-table.component';\r\nexport * from './lib/components/tots-table-api/tots-table-api.component';\r\n\r\n/**\r\n * Modules\r\n */\r\nexport * from './lib/table.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i3","i4","i6.BasePrintColumnComponent","i7.LoadingAnimationRendererComponent","i1.TotsTableComponent"],"mappings":"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"}